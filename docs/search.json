[
  {
    "objectID": "software.html",
    "href": "software.html",
    "title": "Software I’ve Written",
    "section": "",
    "text": "finnts - low code package for time series forecasting"
  },
  {
    "objectID": "software.html#r",
    "href": "software.html#r",
    "title": "Software I’ve Written",
    "section": "",
    "text": "finnts - low code package for time series forecasting"
  },
  {
    "objectID": "posts/2024-01-12-weekend-reads/index.html#articles",
    "href": "posts/2024-01-12-weekend-reads/index.html#articles",
    "title": "Weekend Reads (1/12/24)",
    "section": "Articles",
    "text": "Articles\n\nScott Galloway’s 2024 Predictions\nThe Psychology of Persuasion\nDeep Dive on the AI Revolution"
  },
  {
    "objectID": "posts/2024-01-12-weekend-reads/index.html#videos",
    "href": "posts/2024-01-12-weekend-reads/index.html#videos",
    "title": "Weekend Reads (1/12/24)",
    "section": "Videos",
    "text": "Videos\n\nDoes Athletic Greens Actually Work?\nDo Electrolyte Powders Actually Work?"
  },
  {
    "objectID": "posts/2024-01-12-weekend-reads/index.html#podcasts",
    "href": "posts/2024-01-12-weekend-reads/index.html#podcasts",
    "title": "Weekend Reads (1/12/24)",
    "section": "Podcasts",
    "text": "Podcasts\n\n2024 Predictions on All In\nGeorge Mack on Modern Wisdom"
  },
  {
    "objectID": "posts/2024-01-12-weekend-reads/index.html#tweets",
    "href": "posts/2024-01-12-weekend-reads/index.html#tweets",
    "title": "Weekend Reads (1/12/24)",
    "section": "Tweets",
    "text": "Tweets\n\nDiscipline is Overpriced, Incentives are Underpriced\nRicky Gervais at the Golden Globes"
  },
  {
    "objectID": "posts/2024-01-12-weekend-reads/index.html#movies",
    "href": "posts/2024-01-12-weekend-reads/index.html#movies",
    "title": "Weekend Reads (1/12/24)",
    "section": "Movies",
    "text": "Movies\n\nPoor Things: In Theatres\nYou Are What You Eat (A Twin Experiment): On Netflix"
  },
  {
    "objectID": "posts/2024-01-12-weekend-reads/index.html#books",
    "href": "posts/2024-01-12-weekend-reads/index.html#books",
    "title": "Weekend Reads (1/12/24)",
    "section": "Books",
    "text": "Books\n\nHidden Potential by Adam Grant"
  },
  {
    "objectID": "posts/2023-12-30-naval-book/index.html",
    "href": "posts/2023-12-30-naval-book/index.html",
    "title": "Thoughts on The Almanack of Naval Ravikant",
    "section": "",
    "text": "The Almanack of Naval Ravikant by Eric Jorgenson is something I like to read every few months. Eric was able to take all public content from Naval and put it into one place. I love that idea and think Eric will be successful with many other thought leaders.\nMeet Naval Ravikant: a modern philosopher-entrepreneur and the co-founder of AngelList. Renowned for his deep insights on technology, investing, and the art of living, Ravikant has become a luminary in Silicon Valley. Beyond his success with startups like X (Twitter) and Postmates, he captivates audiences with his profound perspectives on life and happiness, shared on his popular podcast and Twitter feed.\nEnjoy some of Naval’s best quotes and ideas I found most interesting.\n\nTypes of Leverage\n\nLabor means people working for you. It’s the oldest and most fought-over form of leverage. Labor leverage will impress your parents, but don’t waste your life chasing it. Money is a good form of leverage. It means every time you make a decision, you multiply it with money. It’s probably been the most dominate form of leverage in the last century.\nCode and media are permissionless leverage. They’re the leverage behind the newly rich. You can create software and media that works for you while you sleep.\n\nFocus on permissionless leverage. Often people think the next step in their career is managing people. That’s how they get more money, more power, more status. Is Taylor Swift Time’s 2023 person of the year because she is a great manager or because she is the best in the world at media (music, video, merch)? We’re quickly starting to see more one person empires being built. Through media with influencer’s, and through code like Satoshi Nakamoto (inventor of Bitcoin). Instead of trying to grow you career through scaling of people and capital, try the route with no gatekeepers.\nBalaji Srinivasan made an interesting point that once a robot can do something, you’ve turned labor into capital. Meaning you just need the money to purchase the robot and then code to program it. Not long from now we might see managers only overseeing physical robots operating in the world of atoms (doing physical work) or AI agents operating in the world of bits (traditional knowledge work). The skills needed to manage these new digital workers revolve around writing code and coordination. Not traditional management skills.\n\n\nBuild or Sell\n\nLearn to sell. Learn to build. If you can do both, you will be unstoppable.\n\nI believe Bill Gates said this back in his heyday at Microsoft. This is the most powerful piece of advice in the book. Most businesses boil down to a product or service to sell. The most important people at a company either build that product or sell that product. If you do not do work like that today at your company, you might want to consider changing jobs. These roles have the greatest potential for impact on the world, and create the most financial rewards.\n\n\nSpecific Knowledge\n\nSpecific knowledge is knowledge you cannot be trained for. If society can train you, it can train someone else and replace you. When specific knowledge is taught, it’s through apprenticeships, not schools.\n\nThis is how you can prevent AI from taking your job. If what you do can’t be explained in a book, class, or YouTube videos, there is a good chance it will be hard for an AI model to figure out how to do it well.\n\n\nBe You\n\nThe way to get out of the competition trap is to be authentic, to find the thing you know how to do better than anybody. You know how to do it better because you love it, and no one can compete with you. If you love to do it, be authentic, and then figure out how to map that to what society actually wants. Apply some leverage and put your name on it. You take the risks, but you gain the rewards, have ownership and equity in what you’re doing, and just crank it up. Your goal in life is to find the people, business, project, or art that needs you the most. There is something out there just for you. What you don’t want to do is build checklists and decision frameworks built on what other people are doing. You’re never going to be them. You’ll never be good at being somebody else. Technology democratizes consumption but consolidates production. The best person in the world at anything gets to do it for everyone.\n\nNothing to add here, Naval hit the nail on the head.\n\n\nLifelong Learning\n\nThe most important skill for getting rich is becoming a perpetual learner. You have to know how to learn anything you want to learn. The old model of making money is going to school for four years, getting your degree, and working as a professional for thirty years. But things change fast now. Now, you have to come up to speed on a new profession within nine months, and it’s obsolete four years later. But within those three productive years, you can get very wealthy.\n\nChatGPT was released by OpenAI about a year ago. In that time, people have had the opportunity to get up to speed on using generative AI models like GPT-3.5 and now GPT-4. There was no class in using these models, only the documentation on OpenAI’s website and videos on YouTube. For the brave folks who went ahead and learned how to use these models, the world will be theres the next three years while everyone else catches up. Learning how to use GPT-4 in your company to improve a product or become more productive is a form of permissionless leverage. Something of a superpower. The recent AI hype cycle might be winding down, but people with these skills are in demand. A few years from now another technology or idea might come out, another thing that’s not taught in schools. Never stop learning, never stop growing."
  },
  {
    "objectID": "posts/2023-12-11-ai-specialization/index.html#summary",
    "href": "posts/2023-12-11-ai-specialization/index.html#summary",
    "title": "Is AI the End of Specialization?",
    "section": "Summary",
    "text": "Summary\nAI and large language models (LLM) are slowly taking away value from jobs that used to require a lot of schooling, like medicine and law. It will even come for pure software development jobs. What AI cannot replace in the near term is specialized knowledge, skills that can only be obtained through apprenticeships. In the future, we need to focus more on gaining strong domain expertise across business, science, and engineering. But only in ways where specialized knowledge is needed, not simple skill acquisition that a LLM can do faster and cheaper. Going to a coding bootcamp to learn how to build web apps will help you make money this year at a company, but that same company might kick you to the curb three years from now when GitHub Copilot can code the entire app in a day."
  },
  {
    "objectID": "posts/2023-12-11-ai-specialization/index.html#more-specialization-more-knowledge",
    "href": "posts/2023-12-11-ai-specialization/index.html#more-specialization-more-knowledge",
    "title": "Is AI the End of Specialization?",
    "section": "More Specialization, More Knowledge",
    "text": "More Specialization, More Knowledge\nWhich jobs require the most schooling? This is a good proxy for how much knowledge someone has to attain before they are qualified to work in a specific job. Doctors and lawyers seem to require the most schooling before they can start their careers. Most likely because of all of the information they have to memorize and load into their head. The more specialized someone’s skills in a domain like medicine, the more money they can make. What’s interesting is that new large language models are becoming very good at the same thing, and can be trained in months, not years. How will this impact these high status, high pay jobs? Specialization will go through a fundamental shift in the age of AI."
  },
  {
    "objectID": "posts/2023-12-11-ai-specialization/index.html#story-time",
    "href": "posts/2023-12-11-ai-specialization/index.html#story-time",
    "title": "Is AI the End of Specialization?",
    "section": "Story Time",
    "text": "Story Time\nI recently had to get my knee checked out by a doctor. I tweaked it pretty good playing kickball at my grandma’s 90th birthday party (story for a different time). Most of my time spent getting my knee examined was not actually interacting with the doctor I came to see. Getting checked into the system, filling out forms, getting an xray. All things where the doctor was no where to be found. The doctor did finally come in to my room, after waiting a while, and briefly talked to me for two minutes. Yes, two minutes. Almost as if they couldn’t wait to leave and were in a rush to go somewhere else, maybe the golf course. They recommended I go get an MRI, and handed me a phone number to schedule it myself.\nI went to get the MRI, which was even stranger. It was in a different medical building, one with a waiting room the size of a small bedroom. There were no doctors there, just someone to check you in and someone to operate the MRI machine. After getting the MRI, the technician said I had some bruising on my knee. I asked what that meant and they said they were not a doctor and couldn’t tell me anything about my knee. A qualified doctor was required to do that.\nFinally, after another week I was able to see the doctor again. They looked at the MRI and told me some various technical jargon that meant my knee was ok and that I should just take it easy for another month to heal part of my bone that connects to the knee. This entire process took a month, all to see and speak to a doctor for five total minutes over three appointments. The cherry on top was that it cost me hundreds of dollars even with good insurance. Do you see where I’m going here?"
  },
  {
    "objectID": "posts/2023-12-11-ai-specialization/index.html#rethinking-healthcare",
    "href": "posts/2023-12-11-ai-specialization/index.html#rethinking-healthcare",
    "title": "Is AI the End of Specialization?",
    "section": "Rethinking Healthcare",
    "text": "Rethinking Healthcare\nWhat if instead I could go to a local pharmacy, and say that my knee hurts. There could be someone with high tech equipment who could xray my knee, and take an MRI if needed. An AI system would analyze the scans and flag any concerns. I could then get a final recommendation from the system. If something was wrong with my knee, it could recommend some physical therapy exercises. Or if something was really wrong it could route my request to a hospital that could do the surgery for me. This process could happen in an hour, instead of a month, and could cost me half the price without ever needing to see a real doctor. This kind of technology might be closer to reality then some might guess.\n\nDoctors who go to school most of their life could be replaced by a specially trained large language model that was trained on the history of medical research in a few months. It would already know everything about the human body, including what current therapies and medicines work the best. The best part is once it’s built, it can scale to the entire world. Rural villages in India could get the same healthcare as the rich in Beverly Hills.\nWould doctors still need to go to school? There is still an opportunity for wannabe doctors about to enter school. Instead of going to school for seven years, maybe they just jump to the very end of the training from the get go. Instead of building a strong foundation about everything in the body, they skip and go right to the path of specialization in a specific field of medicine. This is how doctors get paid the most anyways. If someone is interested in oncology (treating cancer), then maybe that’s what they start studying immediately. They can use AI tools to cover the basics on everything else and spend all of their waking moments on learning about cancer. Lowering the barriers to entry might make it easier for more folks to do medical research, at least until AI starts to get good at that too.\nIf doctors can be replaced, what happens to nurses? They already do a decent amount of the work already in hospitals, and are the main connection to a patient. Over time they could be the ones powered by AI who end of making all of the decisions and determining the best treatment options. A nurses role would change into a combined version of what doctors and nurses have done historically. Maybe even spawning a new type of job. Robotics is another space where AI can disrupt medicine. Would someone rather be treated by a human, or a machine that comes with 90% less medical bills? Money might do the talking there, but replacing human connection could be the most resistant to AI and automation."
  },
  {
    "objectID": "posts/2023-12-11-ai-specialization/index.html#ai-cannot-replace-specialized-knowledge",
    "href": "posts/2023-12-11-ai-specialization/index.html#ai-cannot-replace-specialized-knowledge",
    "title": "Is AI the End of Specialization?",
    "section": "AI Cannot Replace Specialized Knowledge",
    "text": "AI Cannot Replace Specialized Knowledge\nMemorizing all of the parts of the body and the latest medical research is easily done by LLMs. What could be more difficult is what Naval Ravikant calls specialized knowledge. These are skills that cannot be easily learned from a book or class. Instead they usually get developed through apprenticeships. A student learning from a master, Jedi style. My life in corporate finance is a good example of specialized knowledge. My company hires finance employees from all walks of life. Having a finance degree or experience is good but not crucial to succeeding. This is most likely because the work you actually do within the CFO’s org is very specialized, where what classes you took in school is not that helpful. Most of it, in the financial planning and analysis space, revolves around financial rhythms like forecasting and close. There is no class in college related to this work. You cannot watch a few YouTube videos and get up to speed in a weekend. You learn by doing, and mostly watching others do it. This apprenticeship like model is a powerful indicator of what jobs are hard to replace with AI. There have been efforts to automate things like forecasting with machine learning (ML) in finance, but we have a long way to go before that becomes the default for everyone. Even then there will be cases where a ML model cannot capture everything about a business in its training data, and a human will always need to be in a loop to impart their domain expertise.\nDomain expertise will become more valuable as LLMs can learn more technical concepts like coding and memorizing all facts on the internet. What it can’t do (not yet at least) is know how a specific business works inside and out like a human can. A LLM could write all of the code to build your companies website, but it will not know how to piece together logistics, manufacturing, sales, marketing, and design all at the same time like a CEO can. Maybe one day it will get closer, but for now we still need a human at the top directing all of these AI processes. That takes specialized knowledge."
  },
  {
    "objectID": "posts/2023-12-11-ai-specialization/index.html#final-thoughts",
    "href": "posts/2023-12-11-ai-specialization/index.html#final-thoughts",
    "title": "Is AI the End of Specialization?",
    "section": "Final Thoughts",
    "text": "Final Thoughts\nIn my current job, I believe strong domain knowledge about finance and our business is going to be way more important than what kind of coding skills you posses. Since LLMs will take over more of the coding tasks, leaving work that requires specialized knowledge for us humans to do. This could mean less specialists in technical domains that historically have paid the most, since that kind of knowledge was rare in society. With more emphasis on specialization for domain specific knowledge is a business instead. Coders who are like restaurant line cooks working their way through a backlog created by someone else might be at the highest risk of getting their jobs removed. Same goes for doctors who just spend five minutes reviewing a patients chart and telling them what to do next without any follow up or long-term investment.\nFinally, if AI can know the foundation of each profession, that makes it easier for anyone to come into the space and do good work. If they are able to obtain specialized knowledge quickly. This opens up opportunities for people to have multiple careers throughout their life, without the need of always going back to school or getting a credential of some type. Over the long term this gives the power to individuals with high agency and entrepreneurial spirit. Ones who can seize opportunities for innovation and make impact across many different domains."
  },
  {
    "objectID": "posts/2023-11-24-llm-in-finance/index.html",
    "href": "posts/2023-11-24-llm-in-finance/index.html",
    "title": "Large Language Model Use in Finance",
    "section": "",
    "text": "How can we use large language models in corporate finance? A lot of great work has been done inside of Microsoft Finance to find and consolidate ways we can leverage generative AI. Below are the common themes we found. Special shout out to the Microsoft modern finance community for their help in this effort."
  },
  {
    "objectID": "posts/2023-11-24-llm-in-finance/index.html#final-thoughts",
    "href": "posts/2023-11-24-llm-in-finance/index.html#final-thoughts",
    "title": "Large Language Model Use in Finance",
    "section": "Final Thoughts",
    "text": "Final Thoughts\nThere is no need to go directly into the deep end of the LLM pool with custom solutions. See what you can start using immediately with existing copilots and then build from there. Technology by definition is something that doesn’t quite work yet, so don’t be afraid to experiment and fail."
  },
  {
    "objectID": "posts/2023-02-12-language-wars/index.html",
    "href": "posts/2023-02-12-language-wars/index.html",
    "title": "The ML Language Wars Are Over, Large Language Models Won",
    "section": "",
    "text": "When I started learning data science there was an essential choice that had to be made at the beginning. One that has consequences that can ripple throughout your machine learning journey and even change your career options. I’m talking about the classic debate of R versus Python. Just like any hot issue, you will most likely get a different answer to this question based on who you ask. R is great for statistics, but Python is the best for production. You can’t do deep learning in R. Python is the second best language for everything. Over the years it seems that each side of the debate has only dug their heels in deeper. Whenever people ask me what language they should learn first, I usually give this recommendation. If you can only choose one, learn python, but eventually you will have to learn both to be a good data scientist. Building high quality solutions with data comes down to one thing, picking the right tool for the job.\nEach language has its strengths. Over the years the rise of new open source packages have started to even the playing field. For example R has always had amazing packages for time series, but now python is catching up. The same can be said for the rise of deep learning in R. While I still believe learning both will allow you to thrive in your data career, the rise of large language models (LLM) like OpenAI’s Chat-GPT are going to change the game forever.\nIf you haven’t heard of Chat-GPT yet then you are living under a rock, and congrats on being able to read this blog inside your underground doomsday bunker. These LLM’s can do a lot of things, but the game changer for the open source data space is being able to easily translate one language into another. For example I’m able to easily translate dplyr code in R into perfect pandas code in python. Over time these models will unlock the potential to translate every package from one language into another. Imagine writing a package in R, and have a GitHub action that calls a LLM to automatically convert it into python or vice versa. A data scientist could even write code in one language during a projects development, then automatically convert it into another when they move into production. The possibilities are endless!\nModels like Chat-GPT may not be at this level of language translation today, but like anything in the AI space the pace of innovation moves exponentially, and could be on the horizon sooner than you think. I for one personally can’t wait for this day to come."
  },
  {
    "objectID": "posts/2023-01-01-new-year-resolutions/index.html",
    "href": "posts/2023-01-01-new-year-resolutions/index.html",
    "title": "New Year Resolutions Are Dumb",
    "section": "",
    "text": "New year, new me, right? Today marks the start of many peoples new year resolutions, or big goals they want to start chasing over the next year. For me I think that’s bad advice. Goals like “get in shape” or “travel more” don’t really mean anything and can easily get set aside as your life autopilot takes over. No wonder why most resolutions get dropped by February. Why do you think you have to sign a bunch of contracts when you join a gym? They know how our default settings work and ensure you’re paying for a while regardless if you come in. In reality, they would appreciate it if you didn’t come in at all. Less of your sweat to mop up.\nInstead I focus on two things, being consistent and trying to map out the next few steps in front of me.\nBeing consistent is what matters in anything you pursue in life. People overestimate what they can accomplish in the next few weeks but underestimate what they can accomplish in a year. Let’s change the resolutions we called out above to instead be more consistent. Instead of “get in shape” we can rephrase that as “exercise 30 min every day”, or “travel more” can be changed to “leave the country once a year” or “get out of my town once a quarter”. These are now measurable things that will keep you honest instead of loftier ones that are easier to sweep under the rug.\nHaving long term goals is another trap I try to avoid. People plan, and God laughs. Having it all figured out is a quick way to getting let down when things don’t exactly go as you planned. Instead I focus on the next 1-3 steps in all aspects of my life. I don’t plan to have 12 pack abs, but rather focus on doing core 3-5 times a week. I don’t plan to be some hot shot director or senior engineer at my job, but rather focus on shipping the next few features on the big projects I work on. I still maintain a vision of the long term aspects of the things I work on in my job, but know that those are subject to change as I actually start to build out the next 1-3 steps.\nIf you are someone who enjoys writing goals, then all power to you. To each their own. For me I have found being consistent in a few things can compound into something special. Why not try it yourself and see where it takes you in 2023."
  },
  {
    "objectID": "posts/2022-09-25-quarto-switch/index.html",
    "href": "posts/2022-09-25-quarto-switch/index.html",
    "title": "Switching to Quarto",
    "section": "",
    "text": "I’ve recently switched this website over to quarto, the newest scientific publishing technology developed by RStudio, which recently changed its name to Posit. Lot’s of change going on at Posit, and they are doing some really cool things. One of the most interesting is quarto.\nQuarto builds on top of the already great work of Rmarkdown, which is a way to take code and covert it to other document types like pdf or html. With quarto you can write Python or R code, and create outputs that can be published anywhere, including as web pages.\nI used to leverage some complex Ruby code with Jekyll to produce this site, but with quarto the process was dramatically simplified. The design of “.qmd” documents is very smooth and intuitive, allowing me to fully re-publish the site on a Sunday afternoon. I still leverage github pages, which connects to a “docs” folder in my repo where the quarto files are rendered as html, css, and javascript. Very simple.\nWith great technology like quarto, it begs the question if folks should use quarto for all written communication. From writing proposals, creating slide presentations, publishing papers, and creating technical documentation. All written as code and stored in version control. Exciting stuff!\nIf you’d like to learn more about quarto, check out their website!"
  },
  {
    "objectID": "posts/2021-09-13-intro-finnts/index.html",
    "href": "posts/2021-09-13-intro-finnts/index.html",
    "title": "Time Series Forecasting Simplified with finnts",
    "section": "",
    "text": "I’m excited to announce the release of a new R package called finnts, aka Finn. The package helps simplify the process of creating time series forecasts with statistical and machine learning models. Finn automates the more tedious aspects of machine learning. Things like data cleaning, feature engineering, back testing, and model selection are all handled automatically by Finn while still being flexible to many forecasting scenarios.\nFinn is a perfect solution for people new to machine learning as well as seasoned pros looking for a scalable way to put many forecasts into production. Please take a look at the package site, try it out, and let me know what you think!"
  },
  {
    "objectID": "posts/2021-08-24-probono-stretch-projects/index.html",
    "href": "posts/2021-08-24-probono-stretch-projects/index.html",
    "title": "Pro Bono Work for Stretch Projects",
    "section": "",
    "text": "Want to learn a new skill for your career? There are tons of places to learn the actual skill, from in person classes to free YouTube videos. What is sometimes the hard part is the application of the skill that is often required when trying to transition jobs or career paths. You know, the whole “experience” word employers throw out in job postings. Even entry level jobs ask for so many years of experience. This leads to a chicken or the egg problem. You need experience to get a job, but you need to get a job to gain experience.\nTechnical roles like data science and analytics suffer from this problem in a big way, where you normally see job postings asking for PHD’s or having 10 years of experience. The term data science has barely been around for 10 years, this is crazy."
  },
  {
    "objectID": "posts/2021-08-24-probono-stretch-projects/index.html#final-thoughts",
    "href": "posts/2021-08-24-probono-stretch-projects/index.html#final-thoughts",
    "title": "Pro Bono Work for Stretch Projects",
    "section": "Final Thoughts",
    "text": "Final Thoughts\nWhen learning something new, the best way to master it is by applying it in the real world on something that matters. That could be something within your current job, but oftentimes what you are learning are skills you want to grow into a different job or career. In order to gain experience in those skills before making that job switch, consider volunteering for a non-profit. They would be thrilled to have you."
  },
  {
    "objectID": "posts/2021-08-17-screenplays-vscode/index.html",
    "href": "posts/2021-08-17-screenplays-vscode/index.html",
    "title": "Writing Screenplays in VS Code",
    "section": "",
    "text": "Today there are a lot of tools for people to write screenplays. Most of them are paid and require hundreds of dollars. I recently stumbled across a VS Code add called Better Fountain that allows you to turn simple markdown documents into a professionally formatted screenplay. It is built upon an open source tool called Fountain, that is a bare bones screenwriting tool that is free and easy to use.\nWhy the heck would you want to write a screenplay is VS Code? I was asking myself the same thing. If you come from a coding background, this is an easy transition. Heck, I’m writing this post currently in a markdown file within VS Code 😎. What I think is most interesting is the tools we use to code can now be applied to the older art of storytelling with screenwriting.\nThe biggest tool most coders leverage is some sort of version control. VS Code easily integrates with GitHub, so you can push your latest script (screenplay) changes to version control and track their changes with ease. Side note, kinda funny how folks in Hollywood call their screenplays “scripts”. Guess coding and storytelling are more alike then we thought.\nWhat makes the idea of hosting your script on GitHub is how it could be seen by others. It could be a public repository, and essentially open source. An open source movie? That would be crazy. What if others could read the script and make updates through pull requests? It could be the best version of fan fiction. What if others could read the script, upvote it in some way (using GitHub stars) to catch the eyes of top directors and film studios? That way a movie could already be audience approved beforehand.\nThis becomes very interesting when you add in the idea of block chain and smart contracts. If a movie studio wants to pick it up and take it into production, everyone who contributed to the script in the GitHub repo could automatically receive some sort of pre-arranged compensation when the movie gets made. There could even be new types of open source licenses built for these kinds of projects that have specified terms around compensating people who made the project possible.\nThere could also be some kind of crypto coin created for the repo, which would allow movie studios to buy into the project and either fund change requests to the script or set up a subsequent sequel or second season. The possibilities get more exciting the more I think about them.\nTo close this out, let’s list out everything that makes this a horrible idea. The biggest thing that comes to mind is that people don’t want to know what’s going to happen in a movie or tv show. Having the script publicly available somewhere like GitHub could ruin any twists or cliffhangers in a script, but at the same time we run into the same problem today if someone watches a movie anytime after opening day. Everyone knew the plot to Harry Potter before each movie was released, but people lined up around the corner to go watch them anyway. Maybe open source movies are not such a bad thing after all."
  },
  {
    "objectID": "posts/2021-08-10-bridging-ml-gap/index.html",
    "href": "posts/2021-08-10-bridging-ml-gap/index.html",
    "title": "Bridging the ML Talent Gap in Corporate Finance",
    "section": "",
    "text": "Machine Learning (ML) is exploding, we are only limited by our imagination of how to bake ML into every aspect of our organizations. Within corporate finance the opportunities are endless. Most finance activities can be aided by algorithms.\n\nBudgeting and Forecasting\nAccount Reconciliation\nContract Risk Analysis\nA Million Other Things\n\nWhen finance departments start on their modern finance journey with machine learning, they might tackle the highest impact projects that could benefit the business the most. These will probably revolve around forecasting revenue and various balance sheet risk management solutions.\nWho implements these kinds of game changes in the early days of ML adoption? Help usually comes from these areas.\n\nExisting data scientists that work in another department\nConsultants that come in, build something, then leave\nVendors/Contractors you hire for an extended period of time\n\nLeveraging help from outside of the finance org can get the ball rolling quickly for those big ML solutions that have the most immediate impact. This process usually yields great results. Revenue is forecasted more accurately, and financial risk is better handled across various aspects of the business. Everyone gets a pat on the back and a pep in their step. This initial momentum creates a lot of energy, which stirs up new ideas of where ML can be applied next. This is when you fall into a hidden trap around trying to scale ML in a non-technical discipline like finance.\n\nsource"
  },
  {
    "objectID": "posts/2021-08-10-bridging-ml-gap/index.html#getting-the-ball-rolling",
    "href": "posts/2021-08-10-bridging-ml-gap/index.html#getting-the-ball-rolling",
    "title": "Bridging the ML Talent Gap in Corporate Finance",
    "section": "",
    "text": "Machine Learning (ML) is exploding, we are only limited by our imagination of how to bake ML into every aspect of our organizations. Within corporate finance the opportunities are endless. Most finance activities can be aided by algorithms.\n\nBudgeting and Forecasting\nAccount Reconciliation\nContract Risk Analysis\nA Million Other Things\n\nWhen finance departments start on their modern finance journey with machine learning, they might tackle the highest impact projects that could benefit the business the most. These will probably revolve around forecasting revenue and various balance sheet risk management solutions.\nWho implements these kinds of game changes in the early days of ML adoption? Help usually comes from these areas.\n\nExisting data scientists that work in another department\nConsultants that come in, build something, then leave\nVendors/Contractors you hire for an extended period of time\n\nLeveraging help from outside of the finance org can get the ball rolling quickly for those big ML solutions that have the most immediate impact. This process usually yields great results. Revenue is forecasted more accurately, and financial risk is better handled across various aspects of the business. Everyone gets a pat on the back and a pep in their step. This initial momentum creates a lot of energy, which stirs up new ideas of where ML can be applied next. This is when you fall into a hidden trap around trying to scale ML in a non-technical discipline like finance.\n\nsource"
  },
  {
    "objectID": "posts/2021-08-10-bridging-ml-gap/index.html#what-got-you-here-wont-get-you-there",
    "href": "posts/2021-08-10-bridging-ml-gap/index.html#what-got-you-here-wont-get-you-there",
    "title": "Bridging the ML Talent Gap in Corporate Finance",
    "section": "What Got You Here Won’t Get You There",
    "text": "What Got You Here Won’t Get You There\nYou quickly run into issues with the current business model of outside help. The more solutions you want to build, the more resources you need to build them. ML solutions expand on a linear scale. This linear approach runs into a myriad issues.\n\nData scientist teams in other orgs already have a job, and can only offer so much support.\nCosts grow with each new solution. Existing solution work never goes away. There will always be maintenance to constantly update data sources and improve the model as the business evolves. More solutions, more problems.\nPrinciple-Agent problem with vendors. External resources want to make sure they are always needed, which means they will build solutions in a way to ensure new solutions continue to scale linearly. New innovation around scaling solutions or democratization through tools may never come, since that removes them from the picture.\n\nIn addition to scale issues, there is another large problem of domain expertise. Most outside data scientists don’t understand the work of finance people. Those that claim they have experience in building finance solutions do not understand your company and its various nuances. This creates the need for program manager (PM) roles to be created in order to gather the domain expertise of finance users and translate it to these outside resources to build solutions. More layers of abstraction lead to longer dev times, more communication overhead, and just more everything. The linear approach is a short-term solution to a long-term problem.\n\nLeveraging data science talent outside of finance is a short-term solution to a long-term problem.\n\nYou could also entertain the idea of hiring these vendors and other outside talent as full-time employees to sit within the finance department. This might seem to solve some of the problems called out above, but it still doesn’t solve the long-term problem. These outside data scientists turned finance employees may not have finance backgrounds, and in some respects are “data mercenaries”. They could be people that enjoy building ML solutions but do not care who benefits from them or if they are solving the right problems within finance.\nThere’s got to be a better way!\n\nsource"
  },
  {
    "objectID": "posts/2021-08-10-bridging-ml-gap/index.html#long-term-strategy",
    "href": "posts/2021-08-10-bridging-ml-gap/index.html#long-term-strategy",
    "title": "Bridging the ML Talent Gap in Corporate Finance",
    "section": "Long-Term Strategy",
    "text": "Long-Term Strategy\nThe solution has been right under our nose this entire time. The best people are already within your company, and are already experts in finance. Yes, I’m talking about your finance employees! What I’m proposing is to find the data scientists who don’t know they are data scientists yet, the diamonds in the rough.\nThe diamonds I’m talking about usually fit a familiar archetype, which you may have already seen within your finance employees.\n\nLike to build things. They hate repeating themselves, and often take pride in the large financial models they have built in excel. They might already know a little bit of programming, whether that’s excel macros using VBA or having a little python knowledge to break out whenever they feel constrained by the four walls of excel.\nConstantly learning. They are the definition of a growth mindset. Being a “learn it all” is more important than being a “know it all” kind of person.\nMaster communicator. This one is typically harder to find. Having someone who loves to build, and then can turn around and sell it to others is hard to do. Being able to explain complex technical subjects is a super power itself.\n\nIf you send out the bat signal looking for these types of folks, many will come running. Others may be more hesitant to reach out. Imposter syndrome could be the biggest reason these diamonds stay in the rough. They could be a rock star within the org, but they may not see themselves that way. So always be on the lookout for talent, even if they don’t see it in themselves.\nCreating a path from regular finance employee to data scientist is a hard path to build out. This is a problem I have been thinking about for some time, and more details will be provided in a future blog post. At a high level, an apprenticeship program is one that I personally see as a path to building finance centered data science teams. Most of us forgot about this model of learning, and think it’s only for electricians and plumbers today. I think it’s making a comeback in a big way, and look forward to detailing how I plan to implement it within my finance org. The best part is, once I do I will report back with information around how you can do it too!"
  },
  {
    "objectID": "posts/2021-08-10-bridging-ml-gap/index.html#final-thoughts",
    "href": "posts/2021-08-10-bridging-ml-gap/index.html#final-thoughts",
    "title": "Bridging the ML Talent Gap in Corporate Finance",
    "section": "Final Thoughts",
    "text": "Final Thoughts\nIn conclusion, scaling out data science work within large finance orgs is tough. What initially got you started isn’t what will take you to the next level. There are many pitfalls along the way, and it’s not an easy process. What I hope to do is implement a system for growing data science talent that already exist within finance, then turn around and share those insights with the rest of the world. Stay tuned!"
  },
  {
    "objectID": "posts/2021-08-10-bridging-ml-gap/index.html#reversal",
    "href": "posts/2021-08-10-bridging-ml-gap/index.html#reversal",
    "title": "Bridging the ML Talent Gap in Corporate Finance",
    "section": "Reversal",
    "text": "Reversal\n\nFor smaller finance orgs (&lt;50 employees), leveraging outside data science talent may be your best strategy. There are only a few places that ML can be implemented, and having a full time team on-site may not be the best financial decision.\nHiring external data science help as full time employees could work just fine if you find people who are passionate about solving problems within the business. They may not always be data mercenaries and could have existing business backgrounds in addition to data science skills.\nThere has been a lot of innovation recently in no-code tools that enable anyone to produce a machine learning model for a variety of tasks. This democratization leads to more exponential adoption of ML, as opposed to the linear adoption curve. This can post it’s own risks, where cookie cutter solutions don’t fit the need to every problem. Once you do need a more custom solution based on the needs of the business, you are right back at square one in using outside help. Custom solutions and no-code tools will merge into a happy harmony one day, and will intermingle as self-serve solutions need to be transformed into custom ones managed by a data science team.\nIt will take time to grow existing finance talent into data science roles, and it may not work out. There is some downside to this approach, but it comes with potentially unlimited upside when you empower the domain experts to build things they think are useful.\nLack of career path and poor engineering practices are likely to spring up after going down this paths. This is something to think a lot about, and is something I plan to address in a future post around building an apprenticeship program."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Hi there, my name’s Mike Tokic. I currently work at Microsoft where I help build things with machine learning. These are my thoughts….on things. These thoughts are my personal opinions and do not reflect the ideas/beliefs of my employer. There, now I can say whatever I want."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Thoughts on Things",
    "section": "",
    "text": "Weekend Reads (1/26/24)\n\n\n\n\n\n\n\nweekend-reads\n\n\n\n\nInteresting things I found on the internet this week\n\n\n\n\n\n\nJan 26, 2024\n\n\nMike Tokic\n\n\n\n\n\n\n  \n\n\n\n\nWeekend Reads (1/12/24)\n\n\n\n\n\n\n\nweekend-reads\n\n\n\n\nInteresting things I found on the internet this week\n\n\n\n\n\n\nJan 12, 2024\n\n\nMike Tokic\n\n\n\n\n\n\n  \n\n\n\n\nWeekend Reads (1/5/24)\n\n\n\n\n\n\n\nweekend-reads\n\n\n\n\nInteresting things I found on the internet this week\n\n\n\n\n\n\nJan 5, 2024\n\n\nMike Tokic\n\n\n\n\n\n\n  \n\n\n\n\nThoughts on The Almanack of Naval Ravikant\n\n\n\n\n\n\n\nbooks\n\n\n\n\nKey takeaways from the book\n\n\n\n\n\n\nDec 30, 2023\n\n\nMike Tokic\n\n\n\n\n\n\n  \n\n\n\n\nWeekend Reads (12/22/23)\n\n\n\n\n\n\n\nweekend-reads\n\n\n\n\nInteresting things I found on the internet this week\n\n\n\n\n\n\nDec 22, 2023\n\n\nMike Tokic\n\n\n\n\n\n\n  \n\n\n\n\nIs AI the End of Specialization?\n\n\n\n\n\n\n\nAI\n\n\nLLM\n\n\n\n\nHow AI will change high-skill professions like medicine and law\n\n\n\n\n\n\nDec 11, 2023\n\n\nMike Tokic\n\n\n\n\n\n\n  \n\n\n\n\nWeekend Reads (12/9/23)\n\n\n\n\n\n\n\nweekend-reads\n\n\n\n\nInteresting things I found on the internet this week.\n\n\n\n\n\n\nDec 9, 2023\n\n\nMike Tokic\n\n\n\n\n\n\n  \n\n\n\n\nLarge Language Model Use in Finance\n\n\n\n\n\n\n\nllm\n\n\nfinance\n\n\n\n\nHow we can start using Generative AI technology within corporate finance\n\n\n\n\n\n\nNov 24, 2023\n\n\nMike Tokic\n\n\n\n\n\n\n  \n\n\n\n\nTotal Addressable Market for Advanced Analytics in Finance\n\n\n\n\n\n\n\nmachine-learning\n\n\nfinance\n\n\n\n\nUsing new technology to reinvent how we look forward, look backward, and make the next best decision in finance\n\n\n\n\n\n\nOct 19, 2023\n\n\nMike Tokic\n\n\n\n\n\n\n  \n\n\n\n\nThe ML Language Wars Are Over, Large Language Models Won\n\n\n\n\n\n\n\nmachine-learning\n\n\nopen-source\n\n\n\n\nPicking the right tool for the job has never been easier with things like Chat-GPT\n\n\n\n\n\n\nFeb 13, 2023\n\n\nMike Tokic\n\n\n\n\n\n\n  \n\n\n\n\nThree Levels of Machine Learning Adoption in Finance\n\n\n\n\n\n\n\nmachine-learning\n\n\ntime-series\n\n\nfinance\n\n\n\n\nBeating the three levels on your way to machine learning nirvana\n\n\n\n\n\n\nFeb 11, 2023\n\n\nMike Tokic\n\n\n\n\n\n\n  \n\n\n\n\nNew Year Resolutions Are Dumb\n\n\n\n\n\n\n\ngeneral\n\n\n\n\nDon’t do new year resolutions, be consistent instead\n\n\n\n\n\n\nJan 1, 2023\n\n\nMike Tokic\n\n\n\n\n\n\n  \n\n\n\n\nSwitching to Quarto\n\n\n\n\n\n\n\ngeneral\n\n\n\n\nTransitioning my site to Quarto\n\n\n\n\n\n\nSep 25, 2022\n\n\nMike Tokic\n\n\n\n\n\n\n  \n\n\n\n\nFree Book on Advanced Analytics in Corporate Finance\n\n\n\n\n\n\n\nmachine-learning\n\n\ncode\n\n\nlearning\n\n\nopen-source\n\n\n\n\nFree resources on building advanced analytics talent that thrives\n\n\n\n\n\n\nDec 3, 2021\n\n\nMike Tokic\n\n\n\n\n\n\n  \n\n\n\n\nTime Series Forecasting Simplified with finnts\n\n\n\n\n\n\n\ncode\n\n\ntime-series\n\n\nml\n\n\n\n\nNew R package for time series\n\n\n\n\n\n\nSep 13, 2021\n\n\nMike Tokic\n\n\n\n\n\n\n  \n\n\n\n\nPersonal User Manual\n\n\n\n\n\n\n\ngeneral\n\n\n\n\nQuick facts about my working style\n\n\n\n\n\n\nAug 26, 2021\n\n\nMike Tokic\n\n\n\n\n\n\n  \n\n\n\n\nPro Bono Work for Stretch Projects\n\n\n\n\n\n\n\ncode\n\n\nlearning\n\n\n\n\nGetting experience before you’re qualified to do the work\n\n\n\n\n\n\nAug 24, 2021\n\n\nMike Tokic\n\n\n\n\n\n\n  \n\n\n\n\nWhy Online Courses Stink\n\n\n\n\n\n\n\ncode\n\n\nlearning\n\n\n\n\nPitfalls of technical courses\n\n\n\n\n\n\nAug 19, 2021\n\n\nMike Tokic\n\n\n\n\n\n\n  \n\n\n\n\nWriting Screenplays in VS Code\n\n\n\n\n\n\n\ncode\n\n\nmovies-tv\n\n\nopen-source\n\n\n\n\nOpen sourcing screenwriting\n\n\n\n\n\n\nAug 17, 2021\n\n\nMike Tokic\n\n\n\n\n\n\n  \n\n\n\n\nfreeCodeCamp Appreciation Post\n\n\n\n\n\n\n\ncode\n\n\n\n\nThis site rocks\n\n\n\n\n\n\nAug 12, 2021\n\n\nMike Tokic\n\n\n\n\n\n\n  \n\n\n\n\nBridging the ML Talent Gap in Corporate Finance\n\n\n\n\n\n\n\nml\n\n\nfinance\n\n\n\n\nFinding the diamonds in the rough\n\n\n\n\n\n\nAug 10, 2021\n\n\nMike Tokic\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/2021-08-12-freecodecamp-appreciation/index.html",
    "href": "posts/2021-08-12-freecodecamp-appreciation/index.html",
    "title": "freeCodeCamp Appreciation Post",
    "section": "",
    "text": "Nowadays there are a ton of places to learn programming skills online. From books, to videos, all the way to bootcamps. A lot of these methods work great, but they usually cost money. The free content just teaches the basics and is a hook for you to continue into a paid course or site. freeCodeCamp to the rescue!\nFCC is a free site to learn many aspects of coding. From web development to cybersecurity. They have courses that teach you in depth about programming, with in the browser coding exercises to help hone your skills. To get a certification for a course or topic, all you need to do is complete the project list on the site. This makes it great for complete newbies, as well as people with some experience who would benefit from the project work and certification.\nMy favorite part of FCC is not the site itself, but instead their youtube page. This in a gold mine of useful tutorials and classes taught by experts in their field. The youtube has so much more content than their site. Safe to say it would take years to go through and watch everything 😍.\nOne last final thing I wanted to call out is the newsletter that Quincy Larson, founder of freeCodeCamp, sends out each week. It’s a fantastic list of learning resources curated from the FCC blog and youtube site. Definitely worth subscribing to."
  },
  {
    "objectID": "posts/2021-08-19-why-courses-stink/index.html",
    "href": "posts/2021-08-19-why-courses-stink/index.html",
    "title": "Why Online Courses Stink",
    "section": "",
    "text": "Nowadays there are thousands of courses on the internet, teaching everything from cooking to machine learning with R. Being a self-taught coder myself I started off taking these online courses, but overtime have realized they may not be the best way of learning.\n\nCertifications Over Knowledge\nFor me, traditional schooling techniques do not ensure I master the material or learn anything that will live in my long term memory. What it does ensure is that I will do anything to “check the box” of a certain class and try to get a good grade. Getting a good grade and actually learning the material are two separate things in these environments.\nGetting a good grade entails learning only what is required to pass some test to prove you learned. This is a dangerous game because there are various ways for students to learn as little as possible and still ace a test or exam. What do these tests prove? Mostly that you can regurgitate facts and equations on command. I think we have all been in a situation where we studied just enough to cover what’s going to be on the exam, then a week after the test all of that knowledge seeps out through our ears. Forever lost.\nThe same can be said about online courses that offer “certifications”. This creates the same attitude as regular classes you may have already taken in high school and college. Knowing just enough to get by and get the class credit, or in this case, a certification. The crazy thing about certifications though is that they don’t show how well you did in the course, only that you passed. That’s like seeing a college transcript with only pass/fail grades instead of a GPA.\n\n\nPrioritizing Just in Time Learning\nGetting out of the “certification learning mode” has been critical to my development in programming and data science. What I have realized is the importance of applying whatever I’m learning to real world projects as soon as possible. Here is the learning loop I follow.\n\nLearn enough foundational concepts to be dangerous\nImmediately apply the knowledge to a real world project\nRefer back to learning materials as needed to reinforce concepts\nGo further down the learning rabbit hole with advanced concepts to improve project\nRinse and repeat above steps to constantly reinforce topics and improve project\n\nThis kind of just in time learning has been amazing for me. It’s allowed me to quickly ramp up on the basics and reinforce them in my brain by working on things in my job that actually matter. Not just some fake project within a course, but something that actually effects my job where the stakes are higher. Then after I get the hang of the basics I go back to the learning well to learn more advanced concepts to then come back and apply within the same real world project.\n\n\nReversal\nThe downside to approaching skill acquisition like this is that there is no fancy diploma or certification you can hang on your wall or post on LinkedIn. What you do have is real work on projects you can hang your hat on. These projects may be specific to your job, meaning you may not be able to share them publicly as proof that you know something. This is where the challenge arises. Sites like LinkedIn are working towards creating ways to show that you have a particular skill via online skill assessments, but this still falls back into the learning enough to check the box approach. Building a solution portfolio that lives publicly on places like GitHub is a great way to show employers you have certain skills, but takes extra time since the solutions you build would have to be outside of your job work.\nOne potential solution that’s the best of both worlds is to write blogs about what you’re working on, without spilling any company secrets, and publishing open source software that allows your work to scale to others. That way others can see your growth and commitment to learning, while also reaping the benefits of your work. Truly a win-win."
  },
  {
    "objectID": "posts/2021-08-26-personal-user-manual/index.html",
    "href": "posts/2021-08-26-personal-user-manual/index.html",
    "title": "Personal User Manual",
    "section": "",
    "text": "Below are some basic operating instructions for myself. It details how I work best personally and with others. I got the idea from a great book about Google, called How Google Works. In the book they mention some higher up at the company writing a “how to fix me if broken” post that I found very informative. A lot of times we have to learn how best to work with others the hard way, through trial and error to see what works. Sometimes your coworker might tell you how they prefer to work together, but I cringe thinking about a lot of employees who work through gritted teeth in ways that go against how they work best. So in the below sections I detail how I personally work best throughout the week with myself and others."
  },
  {
    "objectID": "posts/2021-08-26-personal-user-manual/index.html#work-hours",
    "href": "posts/2021-08-26-personal-user-manual/index.html#work-hours",
    "title": "Personal User Manual",
    "section": "Work Hours",
    "text": "Work Hours\nIdeally I like to work from 7am - 4pm PST. I’m currently based out on the West Coast (Seattle) and like to work earlier in the day. This allows me to have a lot of focused deep work time in the first few hours of the work day, before any meetings are scheduled.\nFrom 7am-8am I like to focus on learning something new, mostly around technical topics like AI. Then for the next few hours I dive deep into a particular project. Which could entail writing code or documentation. This time is sacred because it let’s me focus on the most important tasks when I’m best to tackle them, in the morning.\nThen from 12pm-1pm I normally each lunch and set aside more time for learning. These can be AI topics too but usually spread out to more broader technology topics. Such as reading tech news and blogs.\nFinally I close out my day from 1pm-4pm on whatever else needs to get done that day."
  },
  {
    "objectID": "posts/2021-08-26-personal-user-manual/index.html#dev-vs-meeting-days",
    "href": "posts/2021-08-26-personal-user-manual/index.html#dev-vs-meeting-days",
    "title": "Personal User Manual",
    "section": "Dev vs Meeting Days",
    "text": "Dev vs Meeting Days\nI love the idea from Paul Graham about a maker vs manager schedule. Here is a great post that describes it in detail. Basically it states that even a single meeting can throw off any momentum or flow one might have when building things. It could take more than an hour to get ramped up into a specific coding task, and one 30 minute meeting in the middle of the afternoon can totally derail and developer productivity after the meeting.\nThis has caused me to segment my days in two ways. First, on Monday/Wednesday/Friday I block out my calendar entirely. These are my dev days, where I only focus on writing code and deep thinking. Then my Tuesday/Thursdays are wide open for anyone to schedule meetings with me. I have found this to work very well. Usually when I meet a new person and hear the words “I’ll set up some time to chat”, I immediately tell them that Tuesday/Thursday are usually the best days for me. It’s been hard to keep this kind of schedule, especially for meetings that have a lot of people attached to them where finding open calendar spots is next to impossible. There are cases where I make an exception and meet with people on my dev days, but this is only after asking the organizer if it’s imperative that I come to the meeting. I have learned that a lot of the times I can skip and catch up with folks later.\nSaying no to meeting requests has been a long journey for me, and I’m now getting to the point where I don’t feel like a total jerk declining meetings where I would just be a fly on the wall. What a weight off my shoulders."
  },
  {
    "objectID": "posts/2021-08-26-personal-user-manual/index.html#asynchronous-by-default",
    "href": "posts/2021-08-26-personal-user-manual/index.html#asynchronous-by-default",
    "title": "Personal User Manual",
    "section": "Asynchronous by Default",
    "text": "Asynchronous by Default\nI love the idea of asynchronous communication. Less meetings, more documentation and long form writing. I think a lot of times people schedule meetings to think through something rather than reflecting on their own and coming up with a solution before sharing it with others. Scheduling a meeting to “think” about a problem or project is a huge waste of everyone who attended the meeting. It’s also selfish.\nHaving everyone come together to discuss something should not be the first option in my opinion. I think personal reflection and writing your thoughts down before sharing with others is much better. It helps clarify your thinking and prevents groupthink from seeping into decisions. Thinking about a problem, writing down possible solutions with thorough analysis, then sharing the results with team members asynchronously is a much better use of everyone’s time then just having a meeting where no preparation is done beforehand. You could still have a meeting to discuss the written document but usually I only like to do that if there are certain components you’d like to debate about what was written.\nAs more teams realize the power of distributed teams, asynchronous communication and writing skills will become an even bigger superpower. Doing this well not only makes better use of everyone’s time, but allows for better decisions to be made. More people have the opportunity to voice their opinion, especially introverts. More people have the freedom to work when they want to work, preventing the dreaded 4pm Friday meeting 😪."
  },
  {
    "objectID": "posts/2021-08-26-personal-user-manual/index.html#how-to-contact-me",
    "href": "posts/2021-08-26-personal-user-manual/index.html#how-to-contact-me",
    "title": "Personal User Manual",
    "section": "How to Contact Me",
    "text": "How to Contact Me\nUsually email and IM are the best ways to contact me. For email I try to respond within 1-3 days, and for IM within the same day. Sending me an IM with just “hey” are usually not my favorite messages to receive. If you have a question or request, then say it right out of the gate when sending a message. This will help me prioritize what you’re asking over other things I’m working on that day.\nSomething I’m trying to find good solutions for is the dreaded “do you have a min for a quick call”? I know sometimes just asking a question out loud or sharing your screen is the quickest way to figure something out, but it can rob any flow or attention from the person being asked. So I only try to do this sparingly with others on my team and hope others do the same with me."
  },
  {
    "objectID": "posts/2021-08-26-personal-user-manual/index.html#best-times-to-meet",
    "href": "posts/2021-08-26-personal-user-manual/index.html#best-times-to-meet",
    "title": "Personal User Manual",
    "section": "Best Times to Meet",
    "text": "Best Times to Meet\nThe best times I like to meet are at the edges of existing components of my day. For example, I’d rather meet right after my lunch break around 1:00/1:30pm then having a meeting a 2:30pm. Having a meeting in the middle of the afternoon splits that part of the day in half, which can limit the amount of deep work I get get in a day since it takes a while to get in the zone or flow state. That’s ok because I have set up days (Tue/Thu) where I batch all my meetings together. So if I have a bunch of meetings, all with half hour gaps in between, I don’t worry because I know the next day I’ll have a lot of unstructured time for deep work.\nWith that being said, normally I like meetings to start after 10am, take a break over the noon lunch hour, then end by 4pm. Thankfully I work on a team and company that respects those hours, but on occasion I have a 4pm meeting I just can’t avoid. Meeting with a CVP for example. Not the end of the world."
  },
  {
    "objectID": "posts/2021-08-26-personal-user-manual/index.html#how-to-fix-me-if-broken",
    "href": "posts/2021-08-26-personal-user-manual/index.html#how-to-fix-me-if-broken",
    "title": "Personal User Manual",
    "section": "How to Fix Me if Broken",
    "text": "How to Fix Me if Broken\nI had to do some hard thinking about this one. In the end I settled on a simple answer, just leave me alone to think. If I even get flustered or seem super stressed, normally time to myself is the cure. Either just some quiet reflection at my desk or a quick walk around the block.\nI’m an introvert so sometimes too many meetings a deadlines can get the best of me and stress me out too much, solitude is the brain reboot I need to come back down to normal."
  },
  {
    "objectID": "posts/2021-08-26-personal-user-manual/index.html#final-thoughts",
    "href": "posts/2021-08-26-personal-user-manual/index.html#final-thoughts",
    "title": "Personal User Manual",
    "section": "Final Thoughts",
    "text": "Final Thoughts\nI think more people should write about how they work best. Obviously not everyone will have the same working style as other team members, but knowing how someone honestly likes to get their work done helps find common ground and make compromises to get the best collaboration.\nI could even see HR products like Microsoft Viva coming into the mix soon with some type of employee bio or baseball card with high level stats on who they are and how they do their work. Aggregating this kind of info across teams could lead to some interesting insights. If everyone on the team likes to email and IM vs having a meeting to discuss, then maybe the boss should stop scheduling weekly in person update meetings. The same goes for a team that is mostly extroverted and likes to meet in person to work things through. If a new introvert who enjoys asynchronous work joins the team, maybe the team members could create ways to accommodate their working style to find the best of both worlds. Like recording a meeting and allowing them to contribute on their own time instead of joining synchronously. By doing this more teams will become more inclusive, and hopefully more productive. Which is a buzzword every management team loves to hear."
  },
  {
    "objectID": "posts/2021-12-03-finance-aa-book/index.html",
    "href": "posts/2021-12-03-finance-aa-book/index.html",
    "title": "Free Book on Advanced Analytics in Corporate Finance",
    "section": "",
    "text": "I’m excited to announce the release of a new R package called finnts, aka Finn. The package helps simplify the process of creating time series forecasts with statistical and machine learning models. Finn automates the more tedious aspects of machine learning. Things like data cleaning, feature engineering, back testing, and model selection are all handled automatically by Finn while still being flexible to many forecasting scenarios.\nFinn is a perfect solution for people new to machine learning as well as seasoned pros looking for a scalable way to put many forecasts into production. Please take a look at the package site, try it out, and let me know what you think!"
  },
  {
    "objectID": "posts/2023-02-11-three-levels-of-ml-adoption/index.html",
    "href": "posts/2023-02-11-three-levels-of-ml-adoption/index.html",
    "title": "Three Levels of Machine Learning Adoption in Finance",
    "section": "",
    "text": "Growing machine learning adoption in your finance org is tough. There are many levels to clear, with final bosses to beat. This happens most in aspects of finance that are already being done manually by humans, like forecasting (time series). Below are the three questions or “levels” you need to clear before any company can truly leverage machine learning to its full potential in finance for forecasting.\n\nIs the ML forecast as or more accurate than the current process?\nCan you explain the number generated by the black box?\nIf ML forecasted $100, but actuals came in at $110, how do we explain the forecast variance?\n\nEach level needs to be fully cleared before you can tackle the next. Let’s dive in.\n\nFirst Level\nThe first level is pretty straight forward, you know what the accuracy bar is for the existing process, and in most cases you can create a machine learning forecast that can beat it. Even if you reach a similar level of accuracy with the ML process, ML can run in 95% less time than the manual process. Even then that can be a win for your finance team.\n\n\nSecond Level\nNow you’ve built a machine learning process with great results. This is often where you will face the most resistance from your finance team. They will say “oh great the forecast is super accurate, but how do I know how it came up with its number?”. This is tougher than just creating an accurate forecast, since there is often a trade off between building the most accurate model and building the most interpretable one. Thankfully this is a hot area of research right now, with lots of great open source tools being released. The big key to interpretable forecasts for finance tasks is to understand the seasonality and trend of your forecast, and also how outside drivers (macro, internal KPIs) effect your forecast. Your CFO might not care that your model is mostly driven by historical growth rates over the last 2-3 years but telling her that a key driver in your model is the rise of interest rates and lowering consumer sentiment is a great way to tell a story around the forecast and get more people bought in.\n\n\nThird Level\nThis is the final boss. This in uncharted territory because no data scientist or researcher is thinking about how their models impact the FP&A process at a company. This is a process specific to finance and one that doesn’t have a clear answer. If algorithms can be used to look into the future, then they could also be used to look into the past. Knowing how to automatically reconcile what was initially forecasted versus what actually happened would be a game changer. Allowing you to potentially automate much of the traditional close process in your finance team. Being able to explain the initial ML forecast in level two will allow you to eventually see the factors that contribute to the forecast variance during close.\n\n\nFinal Thoughts\nI think about each one of these questions every single day. Open source tools that my team are working on, like Finn, are being actively improved to answer each one of these questions. If you’re interested in using these tools at your company or helping to make them even better, please reach out to me on LinkedIn."
  },
  {
    "objectID": "posts/2023-10-19-aa-tam/index.html",
    "href": "posts/2023-10-19-aa-tam/index.html",
    "title": "Total Addressable Market for Advanced Analytics in Finance",
    "section": "",
    "text": "What would you say, you do here? I often have to explain the buzzword term “advanced analytics” and why exactly does a team like that exist in finance. Shouldn’t we just be called a business intelligence team or data team? The reason my advanced analytics team exists can be boiled down to one sentence. To reinvent how we use new technology to look forward, look backward, and make the next best decision in finance. This one phrase has a lot of surface area, so let’s peel back the onion and dive deeper.\nThe first two buckets cover most activities related to rhythm of business (RoB) work that is so crucial to finance, from budgeting and forecasting to the close process. This contains the bulk of the opportunity or addressable market. The final frontier is helping finance teams make the next best decision, which takes up every other activity outside of the traditional RoB activities.\n\nLooking Forward\nBy definition finance tries to make decisions about the future. What will out revenue look like? How is headcount going to change over the next 12 months? Are we going to actually hit our budget numbers for Q3? Most of looking forward is about some sort of time series forecasting. This is where I think the biggest bang for buck lies in the finance space. Most finance teams need some sort of prediction about the future, and most predictions are time related.\n\n\nLooking Backward\nAfter making predictions about the future, we have to measure what actually happened in the business. This is the “close process” you might hear finance pros discuss (sometimes with distaste). At the end of each month, each quarter, each fiscal year the financial numbers for that period need to lock. Journal entries need to complete, allocations have to be allocated, and every metaphorical “i” is dotted and “t” is crossed. This is probably the most manual process in finance today that hasn’t changed much since the inception of spreadsheets and powerpoint. Human beings have to look at reports, see how the month closed and if that number was different then what was initially forecasted, and then go tell their CFO why we were off $100 or $1,000,000,000 that month. As we use algorithms to look into the future, we can use algorithms to look into the past. If ML can be adopted in the forecast process, then there is a good chance we can use it during close. This is a unique problem to solve though. Currently we can get decent interpretability of the future forecast, but understanding the error between the forecast and what actually happened is not an exact science. I also think it’s a problem most data scientists may not think about today since it might only be important in small niches like finance where explaining that forecast error is crucial and prevents adoption of ML solutions. Large language models I think can unlock this problem, where we can build agents that can peel back the layers of forecasts and run the variance analysis to create the explanations we need. This takes a very manual process and could eventually speed up the story gathering part of close from a few days to a few minutes. Very exciting.\n\n\nMaking the Next Best Decision\nThis is the final frontier for advanced analytics in finance. Outside of the financial RoB processes like forecast and close, finance people do so much other kinds of work that mostly revolve around making data informed decisions about what to do in the business. How should we price our new product? Will the new product hurt sales of our older products? What’s the lifetime value of our customer? Should we buy back shares or double down on R&D? All of these questions cannot fit into a standard time series forecasting bucket, or any standard ML bucket. Each question has its own nuance and needs to be approached in a different way. One way to solve this with technology it to add armies of data & AI professionals who can answer these non-standard questions on demand, but this method doesn’t scale. Finance is notorious for running lean and being reluctant to add large technical teams that don’t do standard BI work like data pipelines and reporting. So again this is a space that is ripe for disruption through large language models. Again it’s agents to the rescue. Agents that can piece together various tools that can find data, pull data, and then analyze that data to help a human make a decision faster and with more precision. We are still so early in this space.\n\n\nFinal Thoughts\nAdvanced analytics in finance still has so much promise yet to be realized. Expectations are high and skeptics are always there. Brick by brick we get closer to making these ideas become a reality. If you are working on machine learning in your finance org, I salute you! It’s often nerve racking work that doesn’t always pay off immediately. Stay at it my friends, and the future will be yours."
  },
  {
    "objectID": "posts/2023-12-09-weekend-reads/index.html#articles",
    "href": "posts/2023-12-09-weekend-reads/index.html#articles",
    "title": "Weekend Reads (12/9/23)",
    "section": "Articles",
    "text": "Articles\n\nHow AI agents will impact the world: great post from Bill Gates exploring agents and their new place in our world.\nLangchain expands collaboration with Microsoft: so cool to see that open-source LLM tech like langchain can coexist with tech giants like Microsoft."
  },
  {
    "objectID": "posts/2023-12-09-weekend-reads/index.html#videos",
    "href": "posts/2023-12-09-weekend-reads/index.html#videos",
    "title": "Weekend Reads (12/9/23)",
    "section": "Videos",
    "text": "Videos\n\nHow large language models work: perfect intro to LLMs from an AI legend\nAI Engineering Summit: interesting videos about a new discipline\n\nOpen questions about AI engineering\nClimbing the ladder of abstraction\nThe intelligent interface"
  },
  {
    "objectID": "posts/2023-12-09-weekend-reads/index.html#podcasts",
    "href": "posts/2023-12-09-weekend-reads/index.html#podcasts",
    "title": "Weekend Reads (12/9/23)",
    "section": "Podcasts",
    "text": "Podcasts\n\nDr. Andrew Huberman on The Tim Ferris Show: Dr. Huberman is a gift to humanity. So much great insight per minute of listening."
  },
  {
    "objectID": "posts/2023-12-09-weekend-reads/index.html#books",
    "href": "posts/2023-12-09-weekend-reads/index.html#books",
    "title": "Weekend Reads (12/9/23)",
    "section": "Books",
    "text": "Books\n\nCurrently Reading\n\nThe Anthonolgy of Balaji Srinivasan: Need to get excited about the future? Learn from one of the best in Balaji.\n\n\n\nRe-Reading\n\nTools of Titans: Re-reding this once a year is almost mandatory for me now. So much great insight that stands the test of time."
  },
  {
    "objectID": "posts/2023-12-22-weekend-reads/index.html#articles",
    "href": "posts/2023-12-22-weekend-reads/index.html#articles",
    "title": "Weekend Reads (12/22/23)",
    "section": "Articles",
    "text": "Articles\n\n4 Types of Professional Time: Always make time for consumption and ideation time.\nMicrosoft Releases Phi-2: Small models are so hot right now.\nNo Meetings, No Deadlines, No Full Time Employees: One meeting a quarter at Gumroad. Yep, that’s the dream. One can only imagine."
  },
  {
    "objectID": "posts/2023-12-22-weekend-reads/index.html#videos",
    "href": "posts/2023-12-22-weekend-reads/index.html#videos",
    "title": "Weekend Reads (12/22/23)",
    "section": "Videos",
    "text": "Videos\n\nMaking LLMs Uncool Again: Hear thoughts from an AI legend, Jeremy Howard.\nA16Z AMA: Various topics tackled by the top dogs at Andreesen Horowitz.\nAngeList QnA with Naval: You can never go wrong hearing from Naval."
  },
  {
    "objectID": "posts/2023-12-22-weekend-reads/index.html#podcasts",
    "href": "posts/2023-12-22-weekend-reads/index.html#podcasts",
    "title": "Weekend Reads (12/22/23)",
    "section": "Podcasts",
    "text": "Podcasts\n\nGeorge Mack on Modern Wisdom: Powerful insights on the role memes play in society."
  },
  {
    "objectID": "posts/2023-12-22-weekend-reads/index.html#books",
    "href": "posts/2023-12-22-weekend-reads/index.html#books",
    "title": "Weekend Reads (12/22/23)",
    "section": "Books",
    "text": "Books\n\nAnthology of Naval Ravikant: Don’t think, just buy this book and re-read once a month.\nPoor Charlie’s Almanac: Timeless wisdom from Charlie Munger, may he rest in peace."
  },
  {
    "objectID": "posts/2024-01-05-weekend-reads/index.html#articles",
    "href": "posts/2024-01-05-weekend-reads/index.html#articles",
    "title": "Weekend Reads (1/5/24)",
    "section": "Articles",
    "text": "Articles\n\nSahil Bloom: The Best Ideas of 2023\nSam Altman: What I Wish Someone Had Told Me"
  },
  {
    "objectID": "posts/2024-01-05-weekend-reads/index.html#videos",
    "href": "posts/2024-01-05-weekend-reads/index.html#videos",
    "title": "Weekend Reads (1/5/24)",
    "section": "Videos",
    "text": "Videos\n\nLast Lecture Series: How to Live an Asymmetric Life"
  },
  {
    "objectID": "posts/2024-01-05-weekend-reads/index.html#podcasts",
    "href": "posts/2024-01-05-weekend-reads/index.html#podcasts",
    "title": "Weekend Reads (1/5/24)",
    "section": "Podcasts",
    "text": "Podcasts\n\nAli Abdaal on Modern Wisdom\nBill Perkins on Modern Wisdom"
  },
  {
    "objectID": "posts/2024-01-05-weekend-reads/index.html#books",
    "href": "posts/2024-01-05-weekend-reads/index.html#books",
    "title": "Weekend Reads (1/5/24)",
    "section": "Books",
    "text": "Books\n\nThe Daily Laws by Robert Greene\nThe Daily Stoic by Ryan Holiday\nA Calendar of Wisdom by Leo Tolstoy"
  },
  {
    "objectID": "posts/2024-01-26-weekend-reads/index.html#articles",
    "href": "posts/2024-01-26-weekend-reads/index.html#articles",
    "title": "Weekend Reads (1/26/24)",
    "section": "Articles",
    "text": "Articles\n\nA Techno-Trad Take on Fertility\nThis is Your Reminder to Say No\nSigns and Portents: Hints about the next year of AI\nMicrosoft Releases Copilot Pro"
  },
  {
    "objectID": "posts/2024-01-26-weekend-reads/index.html#podcasts",
    "href": "posts/2024-01-26-weekend-reads/index.html#podcasts",
    "title": "Weekend Reads (1/26/24)",
    "section": "Podcasts",
    "text": "Podcasts\n\nSal Khan on the Future of Education\nPeter Attia on Huberman Lab\nMarkel CEO on The Knowledge Project"
  },
  {
    "objectID": "posts/2024-01-26-weekend-reads/index.html#tweets",
    "href": "posts/2024-01-26-weekend-reads/index.html#tweets",
    "title": "Weekend Reads (1/26/24)",
    "section": "Tweets",
    "text": "Tweets\n\nPeacock Boosting Their App Downloads\nSurface Area in Your Life"
  },
  {
    "objectID": "posts/2024-01-26-weekend-reads/index.html#books",
    "href": "posts/2024-01-26-weekend-reads/index.html#books",
    "title": "Weekend Reads (1/26/24)",
    "section": "Books",
    "text": "Books\n\nAtomic Habits by James Clear"
  },
  {
    "objectID": "posts/2024-01-26-weekend-reads/index.html#products",
    "href": "posts/2024-01-26-weekend-reads/index.html#products",
    "title": "Weekend Reads (1/26/24)",
    "section": "Products",
    "text": "Products\n\nTuo Circadian Lightbulb"
  }
]