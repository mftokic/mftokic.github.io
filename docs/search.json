[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Hi there, my name’s Mike Tokic. I currently work at Microsoft where I help build things with machine learning. These are my thoughts….on things. These thoughts are my personal opinions and do not reflect the ideas/beliefs of my employer. There, now I can say whatever I want."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Thoughts on Things",
    "section": "",
    "text": "general\n\n\n\n\nDon’t do new year resolutions, be consistent instead\n\n\n\n\n\n\nJan 1, 2023\n\n\nMike Tokic\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\ngeneral\n\n\n\n\nTransitioning my site to Quarto\n\n\n\n\n\n\nSep 25, 2022\n\n\nMike Tokic\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmachine-learning\n\n\ncode\n\n\nlearning\n\n\nopen-source\n\n\n\n\nFree resources on building advanced analytics talent that thrives\n\n\n\n\n\n\nDec 3, 2021\n\n\nMike Tokic\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncode\n\n\ntime-series\n\n\nml\n\n\n\n\nNew R package for time series\n\n\n\n\n\n\nSep 13, 2021\n\n\nMike Tokic\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngeneral\n\n\n\n\nQuick facts about my working style\n\n\n\n\n\n\nAug 26, 2021\n\n\nMike Tokic\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncode\n\n\nlearning\n\n\n\n\nGetting experience before you’re qualified to do the work\n\n\n\n\n\n\nAug 24, 2021\n\n\nMike Tokic\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncode\n\n\nlearning\n\n\n\n\nPitfalls of technical courses\n\n\n\n\n\n\nAug 19, 2021\n\n\nMike Tokic\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncode\n\n\nmovies-tv\n\n\nopen-source\n\n\n\n\nOpen sourcing screenwriting\n\n\n\n\n\n\nAug 17, 2021\n\n\nMike Tokic\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncode\n\n\n\n\nThis site rocks\n\n\n\n\n\n\nAug 12, 2021\n\n\nMike Tokic\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nml\n\n\nfinance\n\n\n\n\nFinding the diamonds in the rough\n\n\n\n\n\n\nAug 10, 2021\n\n\nMike Tokic\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/2021-08-10-bridging-ml-gap/index.html",
    "href": "posts/2021-08-10-bridging-ml-gap/index.html",
    "title": "Bridging the ML Talent Gap in Corporate Finance",
    "section": "",
    "text": "Machine Learning (ML) is exploding, we are only limited by our imagination of how to bake ML into every aspect of our organizations. Within corporate finance the opportunities are endless. Most finance activities can be aided by algorithms.\n\nBudgeting and Forecasting\nAccount Reconciliation\nContract Risk Analysis\nA Million Other Things\n\nWhen finance departments start on their modern finance journey with machine learning, they might tackle the highest impact projects that could benefit the business the most. These will probably revolve around forecasting revenue and various balance sheet risk management solutions.\nWho implements these kinds of game changes in the early days of ML adoption? Help usually comes from these areas.\n\nExisting data scientists that work in another department\nConsultants that come in, build something, then leave\nVendors/Contractors you hire for an extended period of time\n\nLeveraging help from outside of the finance org can get the ball rolling quickly for those big ML solutions that have the most immediate impact. This process usually yields great results. Revenue is forecasted more accurately, and financial risk is better handled across various aspects of the business. Everyone gets a pat on the back and a pep in their step. This initial momentum creates a lot of energy, which stirs up new ideas of where ML can be applied next. This is when you fall into a hidden trap around trying to scale ML in a non-technical discipline like finance.\n\nsource"
  },
  {
    "objectID": "posts/2021-08-10-bridging-ml-gap/index.html#what-got-you-here-wont-get-you-there",
    "href": "posts/2021-08-10-bridging-ml-gap/index.html#what-got-you-here-wont-get-you-there",
    "title": "Bridging the ML Talent Gap in Corporate Finance",
    "section": "What Got You Here Won’t Get You There",
    "text": "What Got You Here Won’t Get You There\nYou quickly run into issues with the current business model of outside help. The more solutions you want to build, the more resources you need to build them. ML solutions expand on a linear scale. This linear approach runs into a myriad issues.\n\nData scientist teams in other orgs already have a job, and can only offer so much support.\nCosts grow with each new solution. Existing solution work never goes away. There will always be maintenance to constantly update data sources and improve the model as the business evolves. More solutions, more problems.\nPrinciple-Agent problem with vendors. External resources want to make sure they are always needed, which means they will build solutions in a way to ensure new solutions continue to scale linearly. New innovation around scaling solutions or democratization through tools may never come, since that removes them from the picture.\n\nIn addition to scale issues, there is another large problem of domain expertise. Most outside data scientists don’t understand the work of finance people. Those that claim they have experience in building finance solutions do not understand your company and its various nuances. This creates the need for program manager (PM) roles to be created in order to gather the domain expertise of finance users and translate it to these outside resources to build solutions. More layers of abstraction lead to longer dev times, more communication overhead, and just more everything. The linear approach is a short-term solution to a long-term problem.\n\nLeveraging data science talent outside of finance is a short-term solution to a long-term problem.\n\nYou could also entertain the idea of hiring these vendors and other outside talent as full-time employees to sit within the finance department. This might seem to solve some of the problems called out above, but it still doesn’t solve the long-term problem. These outside data scientists turned finance employees may not have finance backgrounds, and in some respects are “data mercenaries”. They could be people that enjoy building ML solutions but do not care who benefits from them or if they are solving the right problems within finance.\nThere’s got to be a better way!\n\nsource"
  },
  {
    "objectID": "posts/2021-08-10-bridging-ml-gap/index.html#long-term-strategy",
    "href": "posts/2021-08-10-bridging-ml-gap/index.html#long-term-strategy",
    "title": "Bridging the ML Talent Gap in Corporate Finance",
    "section": "Long-Term Strategy",
    "text": "Long-Term Strategy\nThe solution has been right under our nose this entire time. The best people are already within your company, and are already experts in finance. Yes, I’m talking about your finance employees! What I’m proposing is to find the data scientists who don’t know they are data scientists yet, the diamonds in the rough.\nThe diamonds I’m talking about usually fit a familiar archetype, which you may have already seen within your finance employees.\n\nLike to build things. They hate repeating themselves, and often take pride in the large financial models they have built in excel. They might already know a little bit of programming, whether that’s excel macros using VBA or having a little python knowledge to break out whenever they feel constrained by the four walls of excel.\nConstantly learning. They are the definition of a growth mindset. Being a “learn it all” is more important than being a “know it all” kind of person.\nMaster communicator. This one is typically harder to find. Having someone who loves to build, and then can turn around and sell it to others is hard to do. Being able to explain complex technical subjects is a super power itself.\n\nIf you send out the bat signal looking for these types of folks, many will come running. Others may be more hesitant to reach out. Imposter syndrome could be the biggest reason these diamonds stay in the rough. They could be a rock star within the org, but they may not see themselves that way. So always be on the lookout for talent, even if they don’t see it in themselves.\nCreating a path from regular finance employee to data scientist is a hard path to build out. This is a problem I have been thinking about for some time, and more details will be provided in a future blog post. At a high level, an apprenticeship program is one that I personally see as a path to building finance centered data science teams. Most of us forgot about this model of learning, and think it’s only for electricians and plumbers today. I think it’s making a comeback in a big way, and look forward to detailing how I plan to implement it within my finance org. The best part is, once I do I will report back with information around how you can do it too!"
  },
  {
    "objectID": "posts/2021-08-10-bridging-ml-gap/index.html#final-thoughts",
    "href": "posts/2021-08-10-bridging-ml-gap/index.html#final-thoughts",
    "title": "Bridging the ML Talent Gap in Corporate Finance",
    "section": "Final Thoughts",
    "text": "Final Thoughts\nIn conclusion, scaling out data science work within large finance orgs is tough. What initially got you started isn’t what will take you to the next level. There are many pitfalls along the way, and it’s not an easy process. What I hope to do is implement a system for growing data science talent that already exist within finance, then turn around and share those insights with the rest of the world. Stay tuned!"
  },
  {
    "objectID": "posts/2021-08-10-bridging-ml-gap/index.html#reversal",
    "href": "posts/2021-08-10-bridging-ml-gap/index.html#reversal",
    "title": "Bridging the ML Talent Gap in Corporate Finance",
    "section": "Reversal",
    "text": "Reversal\n\nFor smaller finance orgs (<50 employees), leveraging outside data science talent may be your best strategy. There are only a few places that ML can be implemented, and having a full time team on-site may not be the best financial decision.\nHiring external data science help as full time employees could work just fine if you find people who are passionate about solving problems within the business. They may not always be data mercenaries and could have existing business backgrounds in addition to data science skills.\nThere has been a lot of innovation recently in no-code tools that enable anyone to produce a machine learning model for a variety of tasks. This democratization leads to more exponential adoption of ML, as opposed to the linear adoption curve. This can post it’s own risks, where cookie cutter solutions don’t fit the need to every problem. Once you do need a more custom solution based on the needs of the business, you are right back at square one in using outside help. Custom solutions and no-code tools will merge into a happy harmony one day, and will intermingle as self-serve solutions need to be transformed into custom ones managed by a data science team.\nIt will take time to grow existing finance talent into data science roles, and it may not work out. There is some downside to this approach, but it comes with potentially unlimited upside when you empower the domain experts to build things they think are useful.\nLack of career path and poor engineering practices are likely to spring up after going down this paths. This is something to think a lot about, and is something I plan to address in a future post around building an apprenticeship program."
  },
  {
    "objectID": "posts/2021-08-12-freecodecamp-appreciation/index.html",
    "href": "posts/2021-08-12-freecodecamp-appreciation/index.html",
    "title": "freeCodeCamp Appreciation Post",
    "section": "",
    "text": "FCC is a free site to learn many aspects of coding. From web development to cybersecurity. They have courses that teach you in depth about programming, with in the browser coding exercises to help hone your skills. To get a certification for a course or topic, all you need to do is complete the project list on the site. This makes it great for complete newbies, as well as people with some experience who would benefit from the project work and certification.\nMy favorite part of FCC is not the site itself, but instead their youtube page. This in a gold mine of useful tutorials and classes taught by experts in their field. The youtube has so much more content than their site. Safe to say it would take years to go through and watch everything 😍.\nOne last final thing I wanted to call out is the newsletter that Quincy Larson, founder of freeCodeCamp, sends out each week. It’s a fantastic list of learning resources curated from the FCC blog and youtube site. Definitely worth subscribing to."
  },
  {
    "objectID": "posts/2021-08-17-screenplays-vscode/index.html",
    "href": "posts/2021-08-17-screenplays-vscode/index.html",
    "title": "Writing Screenplays in VS Code",
    "section": "",
    "text": "Why the heck would you want to write a screenplay is VS Code? I was asking myself the same thing. If you come from a coding background, this is an easy transition. Heck, I’m writing this post currently in a markdown file within VS Code 😎. What I think is most interesting is the tools we use to code can now be applied to the older art of storytelling with screenwriting.\nThe biggest tool most coders leverage is some sort of version control. VS Code easily integrates with GitHub, so you can push your latest script (screenplay) changes to version control and track their changes with ease. Side note, kinda funny how folks in Hollywood call their screenplays “scripts”. Guess coding and storytelling are more alike then we thought.\nWhat makes the idea of hosting your script on GitHub is how it could be seen by others. It could be a public repository, and essentially open source. An open source movie? That would be crazy. What if others could read the script and make updates through pull requests? It could be the best version of fan fiction. What if others could read the script, upvote it in some way (using GitHub stars) to catch the eyes of top directors and film studios? That way a movie could already be audience approved beforehand.\nThis becomes very interesting when you add in the idea of block chain and smart contracts. If a movie studio wants to pick it up and take it into production, everyone who contributed to the script in the GitHub repo could automatically receive some sort of pre-arranged compensation when the movie gets made. There could even be new types of open source licenses built for these kinds of projects that have specified terms around compensating people who made the project possible.\nThere could also be some kind of crypto coin created for the repo, which would allow movie studios to buy into the project and either fund change requests to the script or set up a subsequent sequel or second season. The possibilities get more exciting the more I think about them.\nTo close this out, let’s list out everything that makes this a horrible idea. The biggest thing that comes to mind is that people don’t want to know what’s going to happen in a movie or tv show. Having the script publicly available somewhere like GitHub could ruin any twists or cliffhangers in a script, but at the same time we run into the same problem today if someone watches a movie anytime after opening day. Everyone knew the plot to Harry Potter before each movie was released, but people lined up around the corner to go watch them anyway. Maybe open source movies are not such a bad thing after all."
  },
  {
    "objectID": "posts/2021-08-19-why-courses-stink/index.html",
    "href": "posts/2021-08-19-why-courses-stink/index.html",
    "title": "Why Online Courses Stink",
    "section": "",
    "text": "Certifications Over Knowledge\nFor me, traditional schooling techniques do not ensure I master the material or learn anything that will live in my long term memory. What it does ensure is that I will do anything to “check the box” of a certain class and try to get a good grade. Getting a good grade and actually learning the material are two separate things in these environments.\nGetting a good grade entails learning only what is required to pass some test to prove you learned. This is a dangerous game because there are various ways for students to learn as little as possible and still ace a test or exam. What do these tests prove? Mostly that you can regurgitate facts and equations on command. I think we have all been in a situation where we studied just enough to cover what’s going to be on the exam, then a week after the test all of that knowledge seeps out through our ears. Forever lost.\nThe same can be said about online courses that offer “certifications”. This creates the same attitude as regular classes you may have already taken in high school and college. Knowing just enough to get by and get the class credit, or in this case, a certification. The crazy thing about certifications though is that they don’t show how well you did in the course, only that you passed. That’s like seeing a college transcript with only pass/fail grades instead of a GPA.\n\n\nPrioritizing Just in Time Learning\nGetting out of the “certification learning mode” has been critical to my development in programming and data science. What I have realized is the importance of applying whatever I’m learning to real world projects as soon as possible. Here is the learning loop I follow.\n\nLearn enough foundational concepts to be dangerous\nImmediately apply the knowledge to a real world project\nRefer back to learning materials as needed to reinforce concepts\nGo further down the learning rabbit hole with advanced concepts to improve project\nRinse and repeat above steps to constantly reinforce topics and improve project\n\nThis kind of just in time learning has been amazing for me. It’s allowed me to quickly ramp up on the basics and reinforce them in my brain by working on things in my job that actually matter. Not just some fake project within a course, but something that actually effects my job where the stakes are higher. Then after I get the hang of the basics I go back to the learning well to learn more advanced concepts to then come back and apply within the same real world project.\n\n\nReversal\nThe downside to approaching skill acquisition like this is that there is no fancy diploma or certification you can hang on your wall or post on LinkedIn. What you do have is real work on projects you can hang your hat on. These projects may be specific to your job, meaning you may not be able to share them publicly as proof that you know something. This is where the challenge arises. Sites like LinkedIn are working towards creating ways to show that you have a particular skill via online skill assessments, but this still falls back into the learning enough to check the box approach. Building a solution portfolio that lives publicly on places like GitHub is a great way to show employers you have certain skills, but takes extra time since the solutions you build would have to be outside of your job work.\nOne potential solution that’s the best of both worlds is to write blogs about what you’re working on, without spilling any company secrets, and publishing open source software that allows your work to scale to others. That way others can see your growth and commitment to learning, while also reaping the benefits of your work. Truly a win-win."
  },
  {
    "objectID": "posts/2021-08-24-probono-stretch-projects/index.html",
    "href": "posts/2021-08-24-probono-stretch-projects/index.html",
    "title": "Pro Bono Work for Stretch Projects",
    "section": "",
    "text": "Want to learn a new skill for your career? There are tons of places to learn the actual skill, from in person classes to free YouTube videos. What is sometimes the hard part is the application of the skill that is often required when trying to transition jobs or career paths. You know, the whole “experience” word employers throw out in job postings. Even entry level jobs ask for so many years of experience. This leads to a chicken or the egg problem. You need experience to get a job, but you need to get a job to gain experience.\nTechnical roles like data science and analytics suffer from this problem in a big way, where you normally see job postings asking for PHD’s or having 10 years of experience. The term data science has barely been around for 10 years, this is crazy."
  },
  {
    "objectID": "posts/2021-08-24-probono-stretch-projects/index.html#final-thoughts",
    "href": "posts/2021-08-24-probono-stretch-projects/index.html#final-thoughts",
    "title": "Pro Bono Work for Stretch Projects",
    "section": "Final Thoughts",
    "text": "Final Thoughts\nWhen learning something new, the best way to master it is by applying it in the real world on something that matters. That could be something within your current job, but oftentimes what you are learning are skills you want to grow into a different job or career. In order to gain experience in those skills before making that job switch, consider volunteering for a non-profit. They would be thrilled to have you."
  },
  {
    "objectID": "posts/2021-08-26-personal-user-manual/index.html",
    "href": "posts/2021-08-26-personal-user-manual/index.html",
    "title": "Personal User Manual",
    "section": "",
    "text": "Below are some basic operating instructions for myself. It details how I work best personally and with others. I got the idea from a great book about Google, called How Google Works. In the book they mention some higher up at the company writing a “how to fix me if broken” post that I found very informative. A lot of times we have to learn how best to work with others the hard way, through trial and error to see what works. Sometimes your coworker might tell you how they prefer to work together, but I cringe thinking about a lot of employees who work through gritted teeth in ways that go against how they work best. So in the below sections I detail how I personally work best throughout the week with myself and others."
  },
  {
    "objectID": "posts/2021-08-26-personal-user-manual/index.html#work-hours",
    "href": "posts/2021-08-26-personal-user-manual/index.html#work-hours",
    "title": "Personal User Manual",
    "section": "Work Hours",
    "text": "Work Hours\nIdeally I like to work from 7am - 4pm PST. I’m currently based out on the West Coast (Seattle) and like to work earlier in the day. This allows me to have a lot of focused deep work time in the first few hours of the work day, before any meetings are scheduled.\nFrom 7am-8am I like to focus on learning something new, mostly around technical topics like AI. Then for the next few hours I dive deep into a particular project. Which could entail writing code or documentation. This time is sacred because it let’s me focus on the most important tasks when I’m best to tackle them, in the morning.\nThen from 12pm-1pm I normally each lunch and set aside more time for learning. These can be AI topics too but usually spread out to more broader technology topics. Such as reading tech news and blogs.\nFinally I close out my day from 1pm-4pm on whatever else needs to get done that day."
  },
  {
    "objectID": "posts/2021-08-26-personal-user-manual/index.html#dev-vs-meeting-days",
    "href": "posts/2021-08-26-personal-user-manual/index.html#dev-vs-meeting-days",
    "title": "Personal User Manual",
    "section": "Dev vs Meeting Days",
    "text": "Dev vs Meeting Days\nI love the idea from Paul Graham about a maker vs manager schedule. Here is a great post that describes it in detail. Basically it states that even a single meeting can throw off any momentum or flow one might have when building things. It could take more than an hour to get ramped up into a specific coding task, and one 30 minute meeting in the middle of the afternoon can totally derail and developer productivity after the meeting.\nThis has caused me to segment my days in two ways. First, on Monday/Wednesday/Friday I block out my calendar entirely. These are my dev days, where I only focus on writing code and deep thinking. Then my Tuesday/Thursdays are wide open for anyone to schedule meetings with me. I have found this to work very well. Usually when I meet a new person and hear the words “I’ll set up some time to chat”, I immediately tell them that Tuesday/Thursday are usually the best days for me. It’s been hard to keep this kind of schedule, especially for meetings that have a lot of people attached to them where finding open calendar spots is next to impossible. There are cases where I make an exception and meet with people on my dev days, but this is only after asking the organizer if it’s imperative that I come to the meeting. I have learned that a lot of the times I can skip and catch up with folks later.\nSaying no to meeting requests has been a long journey for me, and I’m now getting to the point where I don’t feel like a total jerk declining meetings where I would just be a fly on the wall. What a weight off my shoulders."
  },
  {
    "objectID": "posts/2021-08-26-personal-user-manual/index.html#asynchronous-by-default",
    "href": "posts/2021-08-26-personal-user-manual/index.html#asynchronous-by-default",
    "title": "Personal User Manual",
    "section": "Asynchronous by Default",
    "text": "Asynchronous by Default\nI love the idea of asynchronous communication. Less meetings, more documentation and long form writing. I think a lot of times people schedule meetings to think through something rather than reflecting on their own and coming up with a solution before sharing it with others. Scheduling a meeting to “think” about a problem or project is a huge waste of everyone who attended the meeting. It’s also selfish.\nHaving everyone come together to discuss something should not be the first option in my opinion. I think personal reflection and writing your thoughts down before sharing with others is much better. It helps clarify your thinking and prevents groupthink from seeping into decisions. Thinking about a problem, writing down possible solutions with thorough analysis, then sharing the results with team members asynchronously is a much better use of everyone’s time then just having a meeting where no preparation is done beforehand. You could still have a meeting to discuss the written document but usually I only like to do that if there are certain components you’d like to debate about what was written.\nAs more teams realize the power of distributed teams, asynchronous communication and writing skills will become an even bigger superpower. Doing this well not only makes better use of everyone’s time, but allows for better decisions to be made. More people have the opportunity to voice their opinion, especially introverts. More people have the freedom to work when they want to work, preventing the dreaded 4pm Friday meeting 😪."
  },
  {
    "objectID": "posts/2021-08-26-personal-user-manual/index.html#how-to-contact-me",
    "href": "posts/2021-08-26-personal-user-manual/index.html#how-to-contact-me",
    "title": "Personal User Manual",
    "section": "How to Contact Me",
    "text": "How to Contact Me\nUsually email and IM are the best ways to contact me. For email I try to respond within 1-3 days, and for IM within the same day. Sending me an IM with just “hey” are usually not my favorite messages to receive. If you have a question or request, then say it right out of the gate when sending a message. This will help me prioritize what you’re asking over other things I’m working on that day.\nSomething I’m trying to find good solutions for is the dreaded “do you have a min for a quick call”? I know sometimes just asking a question out loud or sharing your screen is the quickest way to figure something out, but it can rob any flow or attention from the person being asked. So I only try to do this sparingly with others on my team and hope others do the same with me."
  },
  {
    "objectID": "posts/2021-08-26-personal-user-manual/index.html#best-times-to-meet",
    "href": "posts/2021-08-26-personal-user-manual/index.html#best-times-to-meet",
    "title": "Personal User Manual",
    "section": "Best Times to Meet",
    "text": "Best Times to Meet\nThe best times I like to meet are at the edges of existing components of my day. For example, I’d rather meet right after my lunch break around 1:00/1:30pm then having a meeting a 2:30pm. Having a meeting in the middle of the afternoon splits that part of the day in half, which can limit the amount of deep work I get get in a day since it takes a while to get in the zone or flow state. That’s ok because I have set up days (Tue/Thu) where I batch all my meetings together. So if I have a bunch of meetings, all with half hour gaps in between, I don’t worry because I know the next day I’ll have a lot of unstructured time for deep work.\nWith that being said, normally I like meetings to start after 10am, take a break over the noon lunch hour, then end by 4pm. Thankfully I work on a team and company that respects those hours, but on occasion I have a 4pm meeting I just can’t avoid. Meeting with a CVP for example. Not the end of the world."
  },
  {
    "objectID": "posts/2021-08-26-personal-user-manual/index.html#how-to-fix-me-if-broken",
    "href": "posts/2021-08-26-personal-user-manual/index.html#how-to-fix-me-if-broken",
    "title": "Personal User Manual",
    "section": "How to Fix Me if Broken",
    "text": "How to Fix Me if Broken\nI had to do some hard thinking about this one. In the end I settled on a simple answer, just leave me alone to think. If I even get flustered or seem super stressed, normally time to myself is the cure. Either just some quiet reflection at my desk or a quick walk around the block.\nI’m an introvert so sometimes too many meetings a deadlines can get the best of me and stress me out too much, solitude is the brain reboot I need to come back down to normal."
  },
  {
    "objectID": "posts/2021-08-26-personal-user-manual/index.html#final-thoughts",
    "href": "posts/2021-08-26-personal-user-manual/index.html#final-thoughts",
    "title": "Personal User Manual",
    "section": "Final Thoughts",
    "text": "Final Thoughts\nI think more people should write about how they work best. Obviously not everyone will have the same working style as other team members, but knowing how someone honestly likes to get their work done helps find common ground and make compromises to get the best collaboration.\nI could even see HR products like Microsoft Viva coming into the mix soon with some type of employee bio or baseball card with high level stats on who they are and how they do their work. Aggregating this kind of info across teams could lead to some interesting insights. If everyone on the team likes to email and IM vs having a meeting to discuss, then maybe the boss should stop scheduling weekly in person update meetings. The same goes for a team that is mostly extroverted and likes to meet in person to work things through. If a new introvert who enjoys asynchronous work joins the team, maybe the team members could create ways to accommodate their working style to find the best of both worlds. Like recording a meeting and allowing them to contribute on their own time instead of joining synchronously. By doing this more teams will become more inclusive, and hopefully more productive. Which is a buzzword every management team loves to hear."
  },
  {
    "objectID": "posts/2021-09-13-intro-finnts/index.html",
    "href": "posts/2021-09-13-intro-finnts/index.html",
    "title": "Time Series Forecasting Simplified with finnts",
    "section": "",
    "text": "Finn is a perfect solution for people new to machine learning as well as seasoned pros looking for a scalable way to put many forecasts into production. Please take a look at the package site, try it out, and let me know what you think!"
  },
  {
    "objectID": "posts/2021-12-03-finance-aa-book/index.html",
    "href": "posts/2021-12-03-finance-aa-book/index.html",
    "title": "Free Book on Advanced Analytics in Corporate Finance",
    "section": "",
    "text": "Finn is a perfect solution for people new to machine learning as well as seasoned pros looking for a scalable way to put many forecasts into production. Please take a look at the package site, try it out, and let me know what you think!"
  },
  {
    "objectID": "posts/2022-09-25-quarto-switch/index.html",
    "href": "posts/2022-09-25-quarto-switch/index.html",
    "title": "Switching to Quarto",
    "section": "",
    "text": "I’ve recently switched this website over to quarto, the newest scientific publishing technology developed by RStudio, which recently changed its name to Posit. Lot’s of change going on at Posit, and they are doing some really cool things. One of the most interesting is quarto.\nQuarto builds on top of the already great work of Rmarkdown, which is a way to take code and covert it to other document types like pdf or html. With quarto you can write Python or R code, and create outputs that can be published anywhere, including as web pages.\nI used to leverage some complex Ruby code with Jekyll to produce this site, but with quarto the process was dramatically simplified. The design of “.qmd” documents is very smooth and intuitive, allowing me to fully re-publish the site on a Sunday afternoon. I still leverage github pages, which connects to a “docs” folder in my repo where the quarto files are rendered as html, css, and javascript. Very simple.\nWith great technology like quarto, it begs the question if folks should use quarto for all written communication. From writing proposals, creating slide presentations, publishing papers, and creating technical documentation. All written as code and stored in version control. Exciting stuff!\nIf you’d like to learn more about quarto, check out their website!"
  },
  {
    "objectID": "posts/2023-01-01-new-year-resolutions/index.html",
    "href": "posts/2023-01-01-new-year-resolutions/index.html",
    "title": "New Year Resolutions Are Dumb",
    "section": "",
    "text": "New year, new me, right? Today marks the start of many peoples new year resolutions, or big goals they want to start chasing over the next year. For me I think that’s bad advice. Goals like “get in shape” or “travel more” don’t really mean anything and can easily get set aside as your life autopilot takes over. No wonder why most resolutions get dropped by February. Why do you think you have to sign a bunch of contracts when you join a gym? They know how our default settings work and ensure you’re paying for a while regardless if you come in. In reality, they would appreciate it if you didn’t come in at all. Less of your sweat to mop up.\nInstead I focus on two things, being consistent and trying to map out the next few steps in front of me.\nBeing consistent is what matters in anything you pursue in life. People overestimate what they can accomplish in the next few weeks but underestimate what they can accomplish in a year. Let’s change the resolutions we called out above to instead be more consistent. Instead of “get in shape” we can rephrase that as “exercise 30 min every day”, or “travel more” can be changed to “leave the country once a year” or “get out of my town once a quarter”. These are now measurable things that will keep you honest instead of loftier ones that are easier to sweep under the rug.\nHaving long term goals is another trap I try to avoid. People plan, and God laughs. Having it all figured out is a quick way to getting let down when things don’t exactly go as you planned. Instead I focus on the next 1-3 steps in all aspects of my life. I don’t plan to have 12 pack abs, but rather focus on doing core 3-5 times a week. I don’t plan to be some hot shot director or senior engineer at my job, but rather focus on shipping the next few features on the big projects I work on. I still maintain a vision of the long term aspects of the things I work on in my job, but know that those are subject to change as I actually start to build out the next 1-3 steps.\nIf you are someone who enjoys writing goals, then all power to you. To each their own. For me I have found being consistent in a few things can compound into something special. Why not try it yourself and see where it takes you in 2023."
  },
  {
    "objectID": "software.html",
    "href": "software.html",
    "title": "Software I’ve Written",
    "section": "",
    "text": "finnts - low code package for time series forecasting"
  }
]