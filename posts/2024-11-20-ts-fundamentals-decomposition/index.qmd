---
title: "Exploratory Data Analysis: Time Series Decomposition"
description: "Understanding trend and seasonality patterns"
author: "Mike Tokic"
date: "2024-11-20"
categories: [machine-learning, time-series]
image: "image.png"
draft: true
---

*This post is part of the [exploratory data analysis chapter](https://mftokic.github.io/posts/2024-10-03-ts-fundamentals-eda/) within a larger learning series around time series forecasting fundamentals. [Check out the main learning path](https://mftokic.github.io/posts/2024-09-25-ts-fundamentals/) to see other posts in the series.* 

The example data used in this series [can be found here.](https://github.com/mftokic/mftokic.github.io/blob/main/posts/2024-10-02-ts-fundamentals-whats-a-time-series/example_ts_data.csv) 

### Your Data is so Trendy

Every single time series you have ever seen has a trend and seasonality. If they don't, then they are random white noise. A trend is just values steadily rising or falling over time. You could have a rising trend in some years, then a falling trend in others. Below is a chart with a strong trend but weak seasonality. 

![](./chart1.png)

Seasonality just means that your data has a recurring seasonal pattern. For example your data could spike during the holiday season from Oct-Dec, then fall drastically from Jan-Jun. Your seasonality could also change over time. Below is a chart with strong seasonality but weak trend. 

![](./chart2.png)

### Breaking Out Trend and Seasonality with Additive Decomposition

We can isolate the trend component of a time series using simple methods like moving averages (MA). These are just simple averages over a span of time. Let's take a time series from our example revenue data and create a moving average. In the first chart below we used a [2x12-MA](https://otexts.com/fpp3/moving-averages.html#estimating-the-trend-cycle-with-seasonal-data). This moving average now isolates the trend of the time series. We can see a dip in trend around 2020 then a strong rebound going forward. The moving average doesn't start and end at the same time as our time series, since we need a burn in period to start creating the averages. If we wanted to detrend the time series we can subtract the new trend series from our original revenue, shown in the second chart below. 

![](./chart3.png)

![](./chart4.png)

Next we can get the seasonal component of our data. This is very straightforward. All we have to do is take our detrended series and calculate the average revenue for each month of the year. After getting the average value per month, we can divide by the total average across all months. This ensures that the seasonal values of each month add to zero. Then we repeat the final values per month across all years. The final result is shown below. Now we can see there is very strong seasonal patterns at certain times of the year. Some quarters have high sales, while others do not. This kind of repeatable pattern will be very important for us when it comes to training models. 

![](./chart5.png)

Finally we can get the final piece of our decomposition, the remainder (aka residual) series. This is everything that couldn't be explained by the trend and seasonal components. Simply take the original revenue time series, subtract the trend and seasonal components, and bam you have the remainder series. See below. 

![](./chart6.png)

### STL Decomposition

The additive decomposition approach can work very well if your data has a linear trend and stable seasonality. But if the series is growing exponentially, or has changing seasonality, then more advanced methods are needed. This is where STL decomposition comes in. STL is an acronym for “Seasonal and Trend decomposition using Loess”, while loess is a smoothing method for estimating nonlinear relationships. This smoothing process allows for changing seasonality, a more complex understanding of the trend component, and more resistance to outliers. Here is the STL process broken down step by step. 

1. Extract Initial Seasonal Component
    - First, STL identifies the seasonal pattern in the data. It does this by looking at the regular repeating cycles (e.g., monthly or weekly patterns).
    - Using Loess smoothing, it calculates a rough seasonal pattern that captures these cycles. Loess is like drawing a smooth line through points that wiggle up and down in a regular pattern.
    - This step gives an initial estimate of what the seasonal pattern looks like.
2. Remove Seasonality to Estimate the Trend
    - After finding the initial seasonal component, STL subtracts it from the data to get a rough idea of the trend (the overall up or down direction).
    - Loess smoothing is applied again to the deseasonalized data (data without seasonal patterns) to create a smooth trend line.
3. Refine the Seasonal and Trend Components
    - STL repeats the process in cycles, fine-tuning both the trend and seasonal estimates.
    - Each cycle alternates between smoothing the seasonal component and the trend component, adjusting them with each pass to better fit the data.
    - By repeating this process, STL allows the seasonal component to change over time if necessary and captures any evolving trends.
4. Calculate the Residual
    - Once the trend and seasonal components are finalized, STL subtracts both from the original data. What’s left is the residual component, representing the random, unpredictable part of the data.
    - This residual is what can’t be explained by the regular trend or seasonal patterns, capturing any noise or outliers. 

Here is the output of a STL decomposition. Each component can be added together to get the original time series, just like additive decomposition. 

![](./chart7.png)

### Reading the Tea Leaves

How to get insights from the chart. 

### Final Thoughts