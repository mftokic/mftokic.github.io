---
title: "Microsoft Finance ML Forecasting Journey: Part Two"
description: "Tackling our largest forecast process with machine learning"
author: "Mike Tokic"
date: "2024-06-17"
categories: [finance, machine-learning, forecasting]
image: "image.png"
draft: true
---

![](./image.png)

The success of Microsoft finance's first machine learning (ML) forecast spread like wildfire throughout finance. The ML forecast was shared with all finance leaders, so naturally knowledge of what ML could do trickled down to more people across the organization. Eventually the news came to a team in central finance. Think of this team as Microsoft's core FP&A team across the entire company. After seeing the accuracy at a worldwide level, this team saw the potential of machine learning. They knew it could help in the biggest forecast process at Microsoft. The commercial field forecast. This forecast is created by finance members who sit in the "field". Offices all around the world where they support the sales teams for a specific geography. How could they take a world wide forecast by product and break it down into specific countries all across the world? Well buckle up gang, it's time to find out! This is how a tool called "Commercial Predict" was born. 

### How Things Used to Work

Before we dive into all the ML goodness, we have to understand how the old way used to work. I know, it's kind of like eating your vegetables but we just have to do it real fast then we can get to the fun parts. 

In the past, each finance team in the field was responsible for their own forecast each quarter. These forecasts would happen in "CFO forecast cycles". With cycles happening in October, January, and April. Microsoft's fiscal year runs from July - June so these forecast cycles happen at the start of Q2, Q3, and Q4. The forecast at the start of Q1 is budget but that's a story for a different day. Each cycle, a forecast would be created for the remainder of the fiscal year. 

Microsoft sales products in over 100 countries, and most of those countries has a sales team that tries to sell products to companies in that country or geographical region. IF there's a sales team, then there is a finance team who supports them. This means there are dozens of sales finance teams who each CFO forecast cycle are responsible for creating a quarterly forecast for the rest of the fiscal year. Each team was on their own. How they forecasted was tribal knowledge, only known to few. Each team in each geography had their own secret recipe of how the forecasting was done. This meant that each team most likely had their own custom excel model that would create the forecast. This model needed to be handled with care. Since each quarter it would have to be rolled over and prepared for the next forecast cycle. Anyone who has ever created and owned a financial model in excel knows the anxiety faced with trying to build and maintain one. These models were complex, and you said a prayer every time you opened the file. Hoping it wouldn't crash your machine because it was so large. 

Once each team in the field had their forecast for their geography, it would get sent up the food chain. Forecasts from each country would be combined to form higher level aggregations in Microsoft's sales territories. Each aggregation added more countries and continents together. Until you got the total world wide number for the entire commercial business. When each forecast would get added together at a higher level of that geographical hierarchy, senior finance leaders had the opportunity to make adjustments to that forecast. Based on their domain knowledge of the business. With each new forecast aggregation, a new opportunity for leaders to adjust the forecast happened. Eventually the forecast the CFO, Amy Hood, saw was something completely different than what was initially created by each sales finance team for their specific geography. 

Layers upon layers of bias were added to the forecast. Some was good bias that could improve forecast accuracy, but often it was too many cooks in the forecast kitchen. Too many people touching a forecast that didn't need to be touched. Resulting in worse accuracy and more confusion once the books were closed at quarter end. This process would take upwards of a month every quarter. From the initial forecast created by field team all the way up the food chain to the CFO. In the spirit of every good infomercial, "there just has to be a better way!". 

Now you know why finance had to do something different. Drastically different. 

### Excel Prototype Built in a Redmond Garage

All good things start from humble beginnings. The team in CFT wanted to centralize the field forecast process for the commercial business. Create a single way that everyone in the field would follow to create a forecast. In order to make this a reality, they started with the swiss army knife of every finance professional. That's right. You guessed it. They started with excel. Like any innovative project, it quickly became their baby. And all babies need a name. The named it Commercial Predict. 

The team created an excel prototype of a single model that every field finance team could use. It was a combination of the old and the new. First was old but reliable PxQ forecasts. Where you take what's in a sales pipeline for a quarter and multiply it by how many deals on average we have closed in similar historical quarters. Second was classic CAGR and year over year percentage growths, which acutally still work quite well. These traditional methods were combined with more statistical rigor. Something more along the lines of machine learning. They built by hand, formula by formula, exponential smoothing statistical models. A common model in time series forecasting. It's more stats than machine learning, but still performed really well. Today exponential smoothing is a simple function call in excel, but this team built it from scratch. I tip my cap to them, because that was hard to do. 

Now there were multiple forecasting methods in this mega excel model. The beauty of the idea is that someone could come into the model and choose what methods they wanted to use to forecast a specific geography, customer segment, and product. Users could even combine multiple methods together to get a more accurate forecast. This was powerful because someone could use the PxQ sales pipeline method for products that depended on big customer deals landing, and use the other methods for things that had more stable trends and seasonality. 

It was genious prorotype. The team was able to take this to their leadership team and show how one single approach to do forecasting in the field could save thousands of days of combined human effort across the field every year. One mega model to rule them all. With the promise to cut forecasting down by 50%. Would it work though? To test it out, the team ran this excel model alongside the traditional bottoms up forecast process from each field team. They could then compare the results and even track accuracy across the old and new ways. The results were good. The new prototype was the same or even better than the existing process, but was 50% faster. 

The new approach was fast, and it was accurate. The roadblock before adopting the new approach was to get everyone in the field to agree on what level they should forecast at. This historically was a difficult subject to discuss, with everyone having differing opinions. Thankfully this was solved by getting the buy in from the top senior finance leaders in central finance and the field. Once that happened everyone was able to get on board. 

Ok, so the team had a cool protoype that knew worked well. But if they just used that excel model, then they are still maintaining a model that is messy and requires constant upkeep. It would be hard to scale. They needed something more robust. A real tool that was built by engineers. Thankfully there was a team who could do just that. 

### Building the Tool

The vendor team who was created to take over the [initial ML forecasts](https://mftokic.github.io/posts/2024-06-12-msft-ml-fcst-journey-1/) was the up to the task. They had the data science knowledge, but the data engineering and software engineering needed to build a software tool to scale out the excel prototype was missing. So the team got other vendors to fill in those gaps. Now there was a team of engineers all capable of making the tool a reality. 

The first version of the production level Commercial Predict tool had to be built fast, before the next CFO forecast cycle. V1 was built into excel as an add-in field users could download and connect to. It needed to combine new machine learning methods with traditional PxQ and CAGR/YoY run rate methods. 

Here's how it worked. 

1. Data engineers would pull historical revenue and sales pipeline data. All of the forecasts methods were precomputed and saved in a database that was turned into a cube. This would be the starting point for all field members. Instead of calculating these by hand in their old excel models, it would be precomputed for them. At scale. 
2. The forecasts in the cube were then served to users in a custom excel file. Each field team could come into the tool and select the geography, products, and segments they were responsible for forecasting. After making these selections, all of the forecast methods would populate in the excel. 
3. Users could then see each forecast method and see which ones pass their smell test of what they expect to happen in the business based on their domain knowledge. They could then choose a specific forecast method to use, or combine multiple methods together to get a more robust forecast. Finally there might be things these forecast methods don't know about. Like upcoming tax changes or product strategy changes. Field users could ultimately make manually adjustments to the final forecast. 
4. Once the final forecast was created, they could save it back to the cube. This allowed finance leaders to see the forecast creation in real time. Also it would prevent the classic "excel crash without saving" headache we've all been through in the past. 
5. Once the forecast was complete for each field team, a static output file was created at the touch of the button. Teams could take this output and load it into the final planning system. 

Before official launch, training sessions were held to make sure everyone knew how to use it. It was also a good opportunity to fix any bugs in the tool. This resulted in some late nights and even weekend shifts, but the job got done. The tool was launched and the rest is history. 

We were able to go from a forecast process of 21 business days, down to just 10. It was a revolution. This saved Microsoft millions of dollars each year of human capital. Finance teams in the field could now forecast faster, with less headaches, and prevent the layering of bias that was a staple of the previous way. 

### Evolutions

After this launched in 2018, the Commercial Predict tool has gone through a lot of iterations. What started in excel then moved into a web based tool. Then back to excel. With each iteration, we got better at the machine learning section. Better at adding more features to give users more control over the final forecast. 

Eventually Commercial Predict evolved into a much broader solution called Fusion in 2022. Think of it as a tool that could still do the commercial field forecast process but now also take on other forecasts that are done within Microsoft finance. A true one stop shop for all things planning. Fusion is an excel add-in with a built in UI on the side of excel. Kind of like how excel copilot opens on the side of your excel tab, Fusion could do the same. A user could select what forecast they want to do, select the parts they're responsible for forecasting, and Fusion would populate the blank excel file with all of the information they need to finalize their forecast. Methods like PxQ and machine learning are still ran ahead of time. They UI was truly dynamic. You could take any excel file and open the Fusion app inside to get going on the forecast. 

### Lessons Learned

#### Iterate Iterate Iterate 

#### Combine the old with the new

#### Senior leadership buy in 

#### Final Thoughts

Who knows, maybe this will evolve again in the future. Our businesses never stop changing. So the way we forecast will also change. Thankfully People of course are still resistant to using these centralized tool. But that happens with any new technology. It 